Search.setIndex({"docnames": ["conversion", "decoding", "encoding", "environment_variables", "faq", "generation", "guides/fairseq", "guides/marian", "guides/opennmt_py", "guides/opennmt_tf", "guides/opus_mt", "guides/transformers", "hardware_support", "index", "installation", "memory", "parallel", "performance", "python/ctranslate2", "python/ctranslate2.AsyncGenerationResult", "python/ctranslate2.AsyncScoringResult", "python/ctranslate2.AsyncTranslationResult", "python/ctranslate2.DataType", "python/ctranslate2.Device", "python/ctranslate2.Encoder", "python/ctranslate2.EncoderForwardOutput", "python/ctranslate2.ExecutionStats", "python/ctranslate2.GenerationResult", "python/ctranslate2.GenerationStepResult", "python/ctranslate2.Generator", "python/ctranslate2.MpiInfo", "python/ctranslate2.ScoringResult", "python/ctranslate2.StorageView", "python/ctranslate2.TranslationResult", "python/ctranslate2.Translator", "python/ctranslate2.contains_model", "python/ctranslate2.converters", "python/ctranslate2.converters.Converter", "python/ctranslate2.converters.FairseqConverter", "python/ctranslate2.converters.MarianConverter", "python/ctranslate2.converters.OpenAIGPT2Converter", "python/ctranslate2.converters.OpenNMTPyConverter", "python/ctranslate2.converters.OpenNMTTFConverter", "python/ctranslate2.converters.OpusMTConverter", "python/ctranslate2.converters.TransformersConverter", "python/ctranslate2.get_cuda_device_count", "python/ctranslate2.get_log_level", "python/ctranslate2.get_supported_compute_types", "python/ctranslate2.models", "python/ctranslate2.models.Wav2Vec2", "python/ctranslate2.models.Wav2Vec2Bert", "python/ctranslate2.models.Whisper", "python/ctranslate2.models.WhisperGenerationResult", "python/ctranslate2.models.WhisperGenerationResultAsync", "python/ctranslate2.set_log_level", "python/ctranslate2.set_random_seed", "python/ctranslate2.specs", "python/ctranslate2.specs.Activation", "python/ctranslate2.specs.EmbeddingsMerge", "python/ctranslate2.specs.LanguageModelSpec", "python/ctranslate2.specs.LayerSpec", "python/ctranslate2.specs.ModelSpec", "python/ctranslate2.specs.RotaryScalingType", "python/ctranslate2.specs.SequenceToSequenceModelSpec", "python/ctranslate2.specs.TransformerDecoderModelSpec", "python/ctranslate2.specs.TransformerDecoderSpec", "python/ctranslate2.specs.TransformerEncoderModelSpec", "python/ctranslate2.specs.TransformerEncoderSpec", "python/ctranslate2.specs.TransformerSpec", "python/ctranslate2.specs.Wav2Vec2BertSpec", "python/ctranslate2.specs.Wav2Vec2Spec", "python/ctranslate2.specs.WhisperSpec", "python/overview", "quantization", "quickstart", "speech_recognition", "translation", "versioning"], "filenames": ["conversion.md", "decoding.md", "encoding.md", "environment_variables.md", "faq.md", "generation.md", "guides/fairseq.md", "guides/marian.md", "guides/opennmt_py.md", "guides/opennmt_tf.md", "guides/opus_mt.md", "guides/transformers.md", "hardware_support.md", "index.rst", "installation.md", "memory.md", "parallel.md", "performance.md", "python/ctranslate2.rst", "python/ctranslate2.AsyncGenerationResult.rst", "python/ctranslate2.AsyncScoringResult.rst", "python/ctranslate2.AsyncTranslationResult.rst", "python/ctranslate2.DataType.rst", "python/ctranslate2.Device.rst", "python/ctranslate2.Encoder.rst", "python/ctranslate2.EncoderForwardOutput.rst", "python/ctranslate2.ExecutionStats.rst", "python/ctranslate2.GenerationResult.rst", "python/ctranslate2.GenerationStepResult.rst", "python/ctranslate2.Generator.rst", "python/ctranslate2.MpiInfo.rst", "python/ctranslate2.ScoringResult.rst", "python/ctranslate2.StorageView.rst", "python/ctranslate2.TranslationResult.rst", "python/ctranslate2.Translator.rst", "python/ctranslate2.contains_model.rst", "python/ctranslate2.converters.rst", "python/ctranslate2.converters.Converter.rst", "python/ctranslate2.converters.FairseqConverter.rst", "python/ctranslate2.converters.MarianConverter.rst", "python/ctranslate2.converters.OpenAIGPT2Converter.rst", "python/ctranslate2.converters.OpenNMTPyConverter.rst", "python/ctranslate2.converters.OpenNMTTFConverter.rst", "python/ctranslate2.converters.OpusMTConverter.rst", "python/ctranslate2.converters.TransformersConverter.rst", "python/ctranslate2.get_cuda_device_count.rst", "python/ctranslate2.get_log_level.rst", "python/ctranslate2.get_supported_compute_types.rst", "python/ctranslate2.models.rst", "python/ctranslate2.models.Wav2Vec2.rst", "python/ctranslate2.models.Wav2Vec2Bert.rst", "python/ctranslate2.models.Whisper.rst", "python/ctranslate2.models.WhisperGenerationResult.rst", "python/ctranslate2.models.WhisperGenerationResultAsync.rst", "python/ctranslate2.set_log_level.rst", "python/ctranslate2.set_random_seed.rst", "python/ctranslate2.specs.rst", "python/ctranslate2.specs.Activation.rst", "python/ctranslate2.specs.EmbeddingsMerge.rst", "python/ctranslate2.specs.LanguageModelSpec.rst", "python/ctranslate2.specs.LayerSpec.rst", "python/ctranslate2.specs.ModelSpec.rst", "python/ctranslate2.specs.RotaryScalingType.rst", "python/ctranslate2.specs.SequenceToSequenceModelSpec.rst", "python/ctranslate2.specs.TransformerDecoderModelSpec.rst", "python/ctranslate2.specs.TransformerDecoderSpec.rst", "python/ctranslate2.specs.TransformerEncoderModelSpec.rst", "python/ctranslate2.specs.TransformerEncoderSpec.rst", "python/ctranslate2.specs.TransformerSpec.rst", "python/ctranslate2.specs.Wav2Vec2BertSpec.rst", "python/ctranslate2.specs.Wav2Vec2Spec.rst", "python/ctranslate2.specs.WhisperSpec.rst", "python/overview.rst", "quantization.md", "quickstart.md", "speech_recognition.md", "translation.md", "versioning.md"], "titles": ["Model conversion", "Decoding features", "Text encoding", "Environment variables", "Frequently asked questions", "Text generation", "Fairseq", "Marian", "OpenNMT-py", "OpenNMT-tf", "OPUS-MT", "Transformers", "Hardware support", "Index", "Installation", "Memory management", "Multithreading and parallelism", "Performance tips", "ctranslate2", "AsyncGenerationResult", "AsyncScoringResult", "AsyncTranslationResult", "DataType", "Device", "Encoder", "EncoderForwardOutput", "ExecutionStats", "GenerationResult", "GenerationStepResult", "Generator", "MpiInfo", "ScoringResult", "StorageView", "TranslationResult", "Translator", "contains_model", "ctranslate2.converters", "Converter", "FairseqConverter", "MarianConverter", "OpenAIGPT2Converter", "OpenNMTPyConverter", "OpenNMTTFConverter", "OpusMTConverter", "TransformersConverter", "get_cuda_device_count", "get_log_level", "get_supported_compute_types", "ctranslate2.models", "Wav2Vec2", "Wav2Vec2Bert", "Whisper", "WhisperGenerationResult", "WhisperGenerationResultAsync", "set_log_level", "set_random_seed", "ctranslate2.specs", "Activation", "EmbeddingsMerge", "LanguageModelSpec", "LayerSpec", "ModelSpec", "RotaryScalingType", "SequenceToSequenceModelSpec", "TransformerDecoderModelSpec", "TransformerDecoderSpec", "TransformerEncoderModelSpec", "TransformerEncoderSpec", "TransformerSpec", "Wav2Vec2BertSpec", "Wav2Vec2Spec", "WhisperSpec", "Python", "Quantization", "Quickstart", "Speech recognition", "Text translation", "Versioning"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 24, 28, 29, 31, 32, 34, 49, 50, 51, 54, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 77], "core": [0, 3, 4, 17], "ctranslate2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "implement": [0, 3, 5, 11, 14, 16, 32, 49, 50, 51, 73], "i": [0, 1, 2, 3, 5, 6, 10, 11, 12, 14, 16, 17, 19, 20, 21, 24, 28, 29, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 53, 54, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76], "agnost": [0, 4], "logic": [0, 4], "each": [0, 1, 3, 5, 11, 16, 24, 27, 29, 31, 33, 34, 51, 52, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 76], "move": [0, 4, 15, 24, 29, 34, 49, 50, 51], "step": [0, 4, 14, 18, 28, 72, 73], "load": [0, 5, 6, 10, 11, 14, 15, 16, 24, 29, 34, 42, 44, 49, 50, 51, 77], "unifi": 0, "represent": [0, 64, 65, 67, 68], "weight": [0, 4, 11, 16, 34, 37, 38, 39, 40, 41, 42, 43, 44, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "ar": [0, 1, 3, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77], "option": [0, 1, 6, 9, 11, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77], "save": [0, 11, 16, 34, 37, 38, 39, 40, 41, 42, 43, 44, 56, 59, 61, 63, 64, 66, 68, 69, 70, 71, 72, 73], "an": [0, 1, 4, 5, 8, 11, 14, 17, 19, 20, 21, 24, 25, 29, 30, 32, 34, 42, 49, 50, 51, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "optim": [0, 17, 29, 34, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "binari": [0, 12, 14, 73], "format": [0, 6, 8, 11, 34, 37, 38, 39, 40, 41, 42, 43, 44, 74, 76], "python": [0, 3, 13, 16, 46, 49, 54, 73, 77], "modul": [0, 3, 14, 64], "includ": [0, 1, 5, 6, 8, 11, 13, 14, 16, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 51, 74, 76], "api": [0, 1, 3, 74, 76, 77], "script": [0, 8, 16], "multipl": [0, 5, 14, 16, 17, 29, 34, 49, 50, 51, 73], "fairseq": [0, 11, 13, 38, 49, 50], "marian": [0, 10, 11, 13, 39], "opennmt": [0, 4, 13, 14, 41, 42, 49, 73, 74, 76], "py": [0, 4, 13, 14, 41, 49, 73, 74], "tf": [0, 13, 42], "opu": [0, 11, 13, 43, 74], "mt": [0, 11, 13, 43, 74], "transform": [0, 2, 4, 5, 6, 7, 8, 9, 10, 13, 29, 44, 64, 65, 66, 67, 68, 73, 74, 75], "produc": 0, "directori": [0, 6, 9, 11, 14, 24, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 61, 63, 64, 66, 68, 69, 70, 71, 74], "contain": [0, 6, 10, 14, 26, 35, 37, 38, 39, 40, 41, 42, 43, 44, 74], "file": [0, 6, 11, 16, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 61, 63, 64, 66, 68, 69, 70, 71, 76], "json": [0, 51], "configur": [0, 3, 9, 12, 14, 16, 42, 59, 61, 63, 64, 66, 68, 69, 70, 71], "one": [0, 1, 16, 29, 34, 64, 73], "more": [0, 1, 3, 4, 5, 12, 16, 17, 29, 34, 44, 51, 73, 74, 76], "vocabulari": [0, 6, 7, 17, 34, 37, 38, 39, 40, 41, 42, 43, 44, 59, 63, 64, 66, 68, 69, 70, 71, 73], "config": [0, 9, 16, 42, 51, 56, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72], "bin": [0, 6], "source_vocabulari": 0, "target_vocabulari": 0, "expos": [0, 2, 5, 73, 76], "function": [0, 1, 3, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 54, 73], "contains_model": [0, 18, 72], "check": [0, 16, 35], "space": [0, 5], "possibli": [0, 73], "acceler": [0, 1, 14, 29, 73], "execut": [0, 3, 4, 14, 17, 26, 49, 50, 51, 73, 74], "see": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 16, 44, 73, 74, 75, 76], "document": [0, 9, 13, 14, 73, 76], "version": [0, 5, 11, 12, 13, 14, 74], "were": [0, 4, 11], "previous": [0, 3, 29, 34, 51], "thi": [0, 1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 19, 20, 21, 24, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 53, 54, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76], "rare": 0, "broken": 0, "even": [0, 3, 4, 16], "major": 0, "forward": [0, 1, 17, 24, 25, 29, 64, 65, 67, 68], "guarante": [0, 29, 34, 77], "howev": [0, 4, 11, 73], "should": [0, 3, 5, 6, 9, 11, 14, 16, 29, 42, 60, 74, 76], "older": 0, "than": [0, 5, 6, 17, 29, 34], "For": [0, 3, 5, 6, 11, 13, 17, 29, 51, 73], "exampl": [0, 1, 2, 3, 5, 6, 8, 11, 14, 16, 24, 26, 29, 32, 34, 47, 49, 50, 54, 73, 74, 75], "3": [0, 1, 3, 12, 14, 16, 22, 49, 57, 74], "17": [0, 14], "0": [0, 1, 3, 5, 6, 10, 11, 14, 16, 17, 22, 23, 24, 29, 32, 34, 47, 49, 50, 51, 52, 57, 58, 62, 64, 65, 73, 74, 76, 77], "product": [0, 4, 14, 64, 65], "server": 0, "still": [0, 5, 11], "us": [0, 1, 2, 3, 5, 6, 8, 10, 11, 12, 14, 15, 16, 17, 24, 29, 30, 32, 34, 42, 44, 49, 50, 51, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76], "15": [0, 14], "There": [0, 4, 6], "can": [0, 1, 3, 5, 6, 8, 9, 11, 14, 15, 16, 17, 24, 29, 32, 34, 42, 73, 74, 76], "without": [0, 4, 32, 73], "issu": [0, 4], "updat": [0, 14], "greater": [0, 12, 14, 29, 34], "sens": 0, "thei": [0, 3, 5, 6, 10, 11, 12, 29, 34], "anoth": [0, 6, 14, 32, 64, 73], "machin": [0, 11, 16, 17, 74], "differ": [0, 1, 5, 6, 16, 68], "oper": [0, 3, 16], "system": [0, 5, 14, 16, 17, 29, 73], "cpu": [0, 3, 4, 5, 6, 11, 14, 15, 18, 23, 24, 29, 32, 34, 47, 49, 50, 51, 72, 73, 74, 76], "architectur": [0, 3, 4, 11, 12, 14, 64, 65, 67, 68, 73], "onli": [0, 2, 4, 5, 8, 11, 12, 16, 29, 73], "restrict": [0, 1], "2": [0, 1, 3, 5, 8, 14, 16, 17, 22, 24, 29, 32, 34, 40, 49, 50, 51, 57, 62, 64, 68, 73, 74, 76, 77], "must": 0, "same": [0, 3, 5, 8, 16, 24, 29, 32, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "endian": 0, "you": [0, 1, 3, 5, 8, 9, 11, 12, 14, 15, 16, 17, 73, 74], "write": [0, 5, 74], "your": [0, 4, 5, 14, 34, 73, 74], "own": [0, 3, 5, 34, 73, 74], "long": [0, 29], "popul": 0, "train": [0, 4, 6, 7, 8, 9, 10, 11, 38, 39, 43, 74], "exist": [0, 4, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 76], "which": [0, 2, 3, 4, 5, 6, 11, 14, 16, 17, 29, 34, 48, 51, 73, 74, 76], "could": [0, 4, 5, 16], "templat": [0, 4], "A": [0, 1, 24, 26, 27, 29, 31, 32, 33, 34, 42, 46, 48, 51, 52, 54, 60, 76], "defin": [0, 6, 14, 51, 73], "name": [0, 5, 6, 11, 17, 18, 22, 23, 24, 29, 34, 42, 44, 47, 49, 50, 51, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "fill": 0, "out": [0, 1, 5, 16], "come": 0, "from": [0, 1, 3, 4, 5, 6, 8, 9, 11, 12, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76], "In": [0, 1, 9, 11, 12, 15, 16, 73, 76], "code": [0, 3, 4, 6, 11, 44, 74], "repres": 0, "nest": 0, "layerspec": [0, 56, 61, 65, 67, 72], "object": [0, 10, 11, 15, 16, 19, 20, 21, 24, 29, 30, 32, 34, 49, 50, 51, 53], "where": [0, 4, 6, 12, 24, 29, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 61, 63, 64, 66, 68, 69, 70, 71, 76], "intermedi": [0, 11, 44], "scope": 0, "leaf": 0, "valu": [0, 1, 3, 4, 14, 16, 18, 22, 23, 24, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "similar": [0, 4, 6, 11, 73], "how": [0, 5, 6, 11, 67, 68, 76], "would": 0, "pytorch": [0, 6, 8, 11, 24, 29, 32, 38, 41], "nn": [0, 6], "tensorflow": 0, "final": [0, 1, 17, 64, 65, 67, 68], "full": [0, 5, 16, 24, 29, 34, 49, 50, 51, 73], "c": [0, 4, 29, 34, 54, 77], "read": [0, 16, 34], "when": [0, 1, 3, 5, 11, 14, 16, 17, 19, 20, 21, 24, 29, 34, 44, 49, 50, 51, 53, 64, 65, 67, 68, 73], "build": [0, 74], "access": [0, 9, 11], "root": [0, 64, 65, 67, 68], "encod": [0, 5, 6, 10, 11, 13, 18, 25, 38, 48, 49, 50, 51, 65, 66, 67, 68, 71, 72, 74, 77], "embed": [0, 58, 64, 65, 67, 68, 73], "top": [0, 29, 34, 51, 61], "level": [0, 2, 3, 5, 34, 46, 54, 61, 76], "have": [0, 3, 5, 6, 9, 11, 14, 16, 34, 51, 74], "chang": [0, 1, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73], "track": 0, "revis": [0, 11, 44, 56, 59, 61, 63, 64, 66, 68, 69, 70, 71, 72], "number": [0, 1, 16, 17, 24, 26, 29, 30, 34, 45, 49, 50, 51, 64, 65, 67, 68, 71, 76], "next": 0, "section": [0, 1, 74], "model_spec": [0, 60], "It": [0, 1, 5, 11, 14, 29, 30, 34, 74, 76], "simpl": 0, "easi": 0, "fast": [0, 3, 4, 11], "manag": [0, 5, 13, 30], "variabl": [0, 12, 13, 14, 16, 17, 29, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "expect": [0, 1, 11, 29, 59, 63, 64, 66, 68, 69, 70, 71, 76, 77], "ad": [0, 4, 5, 11, 29, 76], "field": 0, "increment": [0, 59, 61, 63, 64, 66, 68, 69, 70, 71], "1": [0, 1, 3, 5, 6, 11, 12, 16, 17, 22, 23, 24, 29, 32, 34, 49, 50, 51, 57, 58, 62, 64, 65, 67, 68, 73, 74], "page": [1, 11], "describ": [1, 11, 29, 34, 51, 64, 65, 66, 67, 68, 71], "text": [1, 6, 11, 13, 24, 29, 34, 51, 74, 75], "translat": [1, 5, 6, 10, 13, 14, 15, 16, 18, 33, 48, 72, 73, 74, 77], "demonstr": [1, 11], "most": [1, 9, 11, 14, 16, 29, 34, 73], "also": [1, 3, 5, 6, 8, 9, 10, 11, 14, 16, 24, 29, 51, 73], "avail": [1, 16, 19, 20, 21, 24, 29, 34, 49, 50, 51, 53, 76], "gener": [1, 3, 6, 11, 13, 16, 18, 24, 27, 28, 34, 41, 48, 51, 52, 55, 72, 73, 76, 77], "follow": [1, 3, 6, 11, 14, 16, 29, 34, 49, 73, 76, 77], "symbol": [1, 51, 77], "left": [1, 73], "unspecifi": 1, "instanc": [1, 15, 16, 24, 29, 32, 34, 42, 49, 50, 51], "token": [1, 6, 8, 17, 18, 24, 26, 27, 28, 29, 31, 34, 38, 51, 52, 59, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], "take": [1, 11], "string": [1, 24, 28, 29, 51, 74, 76], "return": [1, 5, 11, 16, 19, 20, 21, 24, 29, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "list": [1, 3, 6, 11, 14, 24, 29, 34, 39, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "detoken": [1, 34], "input": [1, 5, 6, 11, 16, 17, 24, 29, 32, 34, 49, 50, 51, 64, 65, 73, 74, 76], "sentenc": [1, 6, 17, 34, 74], "project": [1, 3, 11, 12, 13, 64, 74, 77], "gear": 1, "toward": [1, 34], "effici": [1, 3, 17, 29, 34, 73, 77], "serv": [1, 4], "standard": 1, "model": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 17, 24, 25, 29, 30, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77], "place": [1, 24, 29, 34, 49, 50, 51], "experiment": [1, 3, 75], "around": [1, 19, 20, 21, 53], "compress": 1, "infer": [1, 73], "basic": 1, "fastest": [1, 73], "strategi": [1, 58], "simpli": [1, 8, 9, 15], "ha": [1, 4, 16, 29, 34, 76], "highest": [1, 34], "probabl": [1, 4, 11, 28, 29, 31, 34, 51, 52], "timestep": 1, "result": [1, 6, 10, 11, 16, 18, 19, 20, 21, 27, 28, 29, 31, 33, 34, 48, 51, 52, 53, 72, 73, 74, 76], "translate_batch": [1, 6, 10, 11, 16, 18, 34, 72, 74, 76], "beam_siz": [1, 6, 17, 29, 34, 51], "print": [1, 5, 6, 10, 11, 16, 32, 34, 74, 76], "hypothes": [1, 6, 10, 11, 18, 29, 33, 34, 51, 72, 74, 76], "dies": 1, "projekt": 1, "ist": 1, "auf": 1, "die": 1, "effizient": 1, "bedienung": 1, "von": 1, "\u00fcbersetzungsmodellen": 1, "ausgerichtet": 1, "aber": 1, "auch": 1, "ein": 1, "ort": 1, "f\u00fcr": 1, "rund": 1, "um": 1, "modellkompress": 1, "und": 1, "inferenzbeschleunigung": 1, "common": [1, 37, 38, 39, 40, 41, 42, 43, 44, 73], "sequenc": [1, 2, 5, 6, 18, 24, 27, 29, 34, 48, 51, 52, 63, 64, 65, 72], "algorithm": 1, "keep": [1, 17, 24, 29, 34, 49, 50, 51, 73], "n": [1, 11, 34, 64, 65, 76], "all": [1, 6, 11, 16, 28, 38, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76], "time": [1, 5, 16, 26, 59, 61, 63, 64, 66, 68, 69, 70, 71], "neg": 1, "impact": [1, 3], "speed": [1, 3, 76], "memori": [1, 3, 4, 11, 13, 16, 24, 29, 34, 49, 50, 51, 73], "allow": [1, 3, 44, 49, 50, 51], "find": [1, 11], "better": [1, 3, 4, 11], "hypothesi": [1, 28, 33], "4": [1, 3, 11, 12, 16, 22, 32, 49, 57, 74], "set": [1, 3, 6, 12, 14, 16, 17, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 54, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76], "num_hypothes": [1, 29, 34, 51], "argument": [1, 5, 11, 17, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 54], "min_decoding_length": [1, 34], "max_decoding_length": [1, 34], "control": [1, 3, 4, 12, 54], "minimum": [1, 29, 34], "maximum": [1, 24, 29, 34, 49, 50, 51, 73], "doe": [1, 3, 5, 6, 32, 76], "end": [1, 5, 6, 17, 29, 34, 38, 74], "10": [1, 5, 6, 11, 73, 74], "assert": 1, "len": 1, "These": 1, "do": [1, 5, 64, 73], "appli": [1, 6, 10, 17, 29, 34, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "empti": [1, 27, 33, 52, 76], "alwai": [1, 5, 8, 16, 76], "output": [1, 5, 6, 8, 10, 11, 24, 25, 26, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73, 74, 76], "why": 1, "default": [1, 3, 6, 14, 16, 17, 24, 29, 34, 49, 50, 51, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73], "we": [1, 16, 73], "non": [1, 14, 51, 73], "least": [1, 11, 12], "By": [1, 3, 14, 73], "truncat": [1, 29, 34], "after": [1, 29, 34, 64, 65, 66, 67, 68], "1024": [1, 5, 29, 34, 49], "limit": [1, 16], "usag": [1, 3, 4, 11, 13, 73, 76], "max_input_length": [1, 29, 34], "target_prefix": [1, 6, 11, 34], "forc": [1, 3, 37, 38, 39, 40, 41, 42, 43, 44], "start": [1, 5, 6, 8, 11, 29, 38, 51, 74], "let": 1, "": [1, 3, 5, 6, 8, 11, 29, 34, 74], "sai": [1, 6], "want": [1, 4, 9, 15, 16], "replac": [1, 34], "first": [1, 11, 29, 34, 51, 64, 65, 74], "occurr": 1, "da": 1, "prefix": [1, 6, 34, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "effect": [1, 16], "target": [1, 6, 11, 14, 34, 38, 63, 68, 76], "context": [1, 24, 29, 34, 49, 50, 51], "rest": [1, 4], "servieren": 1, "instead": [1, 3, 14, 29, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "bia": [1, 65, 67, 68], "prefix_bias_beta": [1, 34], "higher": 1, "stronger": 1, "diverg": 1, "low": 1, "confid": 1, "detail": 1, "5": [1, 6, 12, 14, 22, 51, 57, 73, 74], "enforc": 1, "lower": [1, 64, 65], "combin": 1, "return_altern": [1, 29, 34], "flag": [1, 3, 12, 14, 44], "just": [1, 5], "true": [1, 3, 5, 11, 16, 19, 20, 21, 24, 29, 34, 49, 50, 51, 53, 64, 65, 67, 68], "effekt": 1, "effizienter": 1, "effizienten": 1, "dienst": 1, "effizienz": 1, "de": [1, 6, 10, 11, 74], "practic": 1, "extract": 1, "like": [1, 5, 11, 16, 24, 29, 34, 49, 50, 51, 64, 65, 73], "appear": 1, "complet": [1, 5, 8, 11, 29, 34], "independ": 1, "paramet": [1, 3, 6, 11, 16, 24, 29, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 54, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "min_alternative_expansion_prob": [1, 29, 34], "filter": [1, 16, 51], "veri": [1, 16], "unlik": 1, "expans": 1, "correspond": [1, 9, 11, 73], "immedi": [1, 16], "try": [1, 16], "small": [1, 11], "001": 1, "nonsens": 1, "mode": [1, 16, 24, 29, 34, 49, 50, 51, 73], "randomli": [1, 29, 34, 51], "distribut": 1, "frequent": [1, 13], "back": [1, 15, 24, 29, 34, 49, 50, 51], "techniqu": [1, 73], "edunov": 1, "et": [1, 73], "al": [1, 73], "2018": 1, "below": [1, 5, 11, 12, 16, 17, 73], "best": [1, 3, 12, 51], "candid": [1, 29, 34, 51, 76], "sampling_topk": [1, 5, 6, 11, 29, 34, 51], "programm": 1, "erm\u00f6glicht": 1, "gleichzeitig": 1, "einen": 1, "einsatzort": 1, "oder": 1, "beschleunigen": 1, "der": 1, "schlussfolgerung": 1, "e": [1, 3, 8, 11, 14, 15, 24, 29, 32, 38, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73, 74], "dient": 1, "dazu": 1, "standardisierten": 1, "\u00fcbersetzungsmodel": 1, "effizi": 1, "zu": 1, "bedienen": 1, "zur": 1, "erprobung": 1, "formkomprimierung": 1, "folgebeschleunigung": 1, "richtet": 1, "sich": 1, "zwar": 1, "den": 1, "servic": 1, "\u00fcbersetzungen": 1, "modellen": 1, "modellkomprimierung": 1, "ineffekt": 1, "beschleunigung": 1, "increas": [1, 3, 17, 29, 76, 77], "sampling_temperatur": [1, 5, 11, 29, 34, 51], "high": [2, 3, 5, 11, 76], "class": [2, 5, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "run": [2, 5, 6, 11, 14, 16, 24, 29, 30, 34, 49, 50, 51, 73, 74, 76], "bert": [2, 66], "main": [2, 5, 11, 49, 50, 73, 74, 76], "entrypoint": [2, 5, 14, 76], "guid": [2, 10, 12, 74, 75], "classif": 2, "some": [3, 4, 6, 11, 14, 15, 16, 17, 26, 29, 34, 44, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "custom": [3, 4, 11, 14, 16, 38, 44, 74], "befor": [3, 11, 34, 49, 50, 51, 64, 65], "import": [3, 5, 6, 10, 11, 54, 74, 76], "g": [3, 8, 14, 15, 24, 29, 32, 38, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73, 74], "o": [3, 14, 74], "boolean": 3, "enabl": [3, 14, 16, 17, 29, 34, 44, 64, 65, 67, 68, 73, 76], "alloc": [3, 32], "gpu": [3, 4, 5, 16, 30, 45, 73, 76], "cudamalloc": 3, "costli": 3, "avoid": [3, 5, 17], "perform": [3, 12, 13, 16, 29, 73], "reason": 3, "integr": [3, 4, 14, 75], "cach": [3, 17, 24, 29, 34, 49, 50, 51, 64, 65], "reus": [3, 5, 29], "buffer": [3, 32], "cuda_malloc_async": 3, "cuda": [3, 11, 12, 14, 16, 18, 23, 24, 29, 32, 34, 47, 49, 50, 51, 72, 73, 76], "11": [3, 14, 74], "asynchron": [3, 19, 20, 21, 29, 34, 51, 53, 76], "pool": [3, 11, 25, 66], "introduc": [3, 4, 11], "cub_cach": 3, "cub": 3, "bf16": [3, 73], "comput": [3, 4, 5, 6, 11, 12, 16, 17, 19, 20, 21, 24, 29, 34, 44, 47, 49, 50, 51, 53, 73], "devic": [3, 5, 6, 11, 16, 18, 24, 29, 32, 34, 45, 47, 48, 49, 50, 51, 72, 73, 74, 76], "support": [3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 47, 51, 76, 77], "fp16": [3, 11, 73], "gemm": [3, 17, 73], "disabl": [3, 14, 16, 17, 27, 28, 29, 33, 34, 51, 52, 65, 67, 68], "accumul": [3, 73], "mai": [3, 16, 38, 44], "fp32": [3, 73], "automat": [3, 11, 12, 24, 29, 34, 42, 49, 50, 51], "known": [3, 5], "work": [3, 73], "precis": [3, 44, 73], "tradeoff": 3, "been": 3, "select": [3, 9, 11, 12, 14, 65, 68, 73], "bin_growth": 3, "min_bin": 3, "max_bin": 3, "12": [3, 14, 73], "max_cached_byt": 3, "209715200": 3, "200mb": 3, "overrid": [3, 37, 38, 39, 40, 41, 42, 43, 44], "comma": 3, "separ": [3, 5, 10, 14, 16, 73, 76], "order": [3, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "abov": [3, 11], "export": [3, 4, 16, 74], "8": [3, 5, 11, 14, 16, 74], "7": [3, 5, 11, 14, 17, 51, 73], "6291455": 3, "descript": [3, 5, 13, 14], "specif": [3, 4, 11, 16, 32, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "instruct": [3, 11, 12, 13, 14], "isa": [3, 14], "possibl": [3, 4, 16, 17, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "avx": [3, 12], "avx2": [3, 12], "avx512": [3, 12, 17], "backend": [3, 12, 14, 73], "librari": [3, 4, 29, 34, 54, 73, 74], "intel": [3, 4, 12, 14, 17, 73], "mkl": [3, 4, 12, 14, 73], "usual": [3, 5, 14, 73], "dispatch": [3, 14], "pack": [3, 17], "improv": [3, 11, 16, 17, 44], "singl": [3, 6, 14, 17, 28], "decod": [3, 5, 6, 8, 10, 11, 13, 17, 28, 29, 34, 38, 51, 64, 65, 68, 71, 74], "articl": 3, "learn": [3, 4], "about": [3, 30, 73], "runtim": [3, 14, 24, 29, 34, 49, 50, 51, 73], "decid": 3, "whether": [3, 24, 28, 29, 34, 42, 49, 50, 51], "base": [3, 11, 16, 37, 59, 63, 64, 65, 73], "vendor": 3, "log": [3, 5, 28, 29, 31, 34, 46, 51, 54, 73], "verbos": 3, "off": [3, 14], "critic": 3, "error": [3, 76], "warn": 3, "info": [3, 54, 73], "debug": 3, "trace": 3, "set_log_level": [3, 18, 72, 73], "share": [4, 16, 32, 64, 65, 73], "goal": 4, "engin": 4, "lightweight": 4, "hard": 4, "overcom": 4, "strong": 4, "depend": [4, 12, 14, 16, 29, 74], "luatorch": 4, "lua": 4, "now": 4, "both": [4, 12, 76], "deprec": 4, "favor": 4, "other": [4, 9, 11, 12, 16, 73, 74, 77], "toolkit": [4, 14], "direct": 4, "relianc": 4, "eigen": 4, "heavi": 4, "address": 4, "sever": [4, 5], "wai": [4, 29], "framework": [4, 11], "convers": [4, 6, 7, 8, 9, 11, 13, 37, 38, 39, 40, 41, 42, 43, 44], "call": [4, 5, 11, 16, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 73], "extern": 4, "cubla": [4, 14], "etc": [4, 16], "occur": 4, "late": 4, "reli": 4, "here": [4, 11, 29, 73, 76], "scenario": 4, "accelar": 4, "especi": 4, "need": [4, 11, 16, 74], "emb": 4, "applic": [4, 14, 16], "larg": [4, 5, 11, 17, 29, 34], "requir": [4, 5, 6, 7, 8, 11, 12, 14, 24, 29, 34, 38, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "thread": [4, 14, 16, 17, 24, 29, 34, 49, 50, 51], "reduc": [4, 11, 73, 76], "size": [4, 5, 16, 17, 29, 34, 51, 59, 63, 64, 65, 66, 68, 69, 70, 71, 73], "disk": [4, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73], "cover": [4, 77], "kei": [4, 64, 65], "featur": [4, 11, 13, 49, 50, 51, 76], "current": [4, 6, 11, 24, 29, 30, 34, 46, 49, 50, 51, 73], "approach": 4, "redefin": 4, "graph": 4, "via": [4, 76], "impli": [4, 73], "assumpt": 4, "mani": [4, 17, 29, 34], "make": [4, 5, 8, 11, 14, 16, 17, 74], "faster": [4, 11], "open": [4, 5, 16, 34], "overview": 4, "abl": [4, 5], "languag": [5, 11, 38, 51, 59, 69, 70], "gpt": [5, 40, 64, 65], "provid": [5, 10, 14, 15, 30, 38, 76], "method": [5, 11, 15, 16, 17, 19, 20, 21, 24, 29, 30, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "generate_batch": [5, 6, 8, 11, 18, 29, 72, 73], "batch": [5, 16, 17, 24, 28, 29, 34, 49, 50, 51, 74, 76], "score_batch": [5, 6, 18, 29, 34, 72], "likelihood": 5, "perplex": [5, 6], "wmt19": 5, "generate_token": [5, 18, 29, 34, 72], "chat": [5, 11], "llama": [5, 73], "forward_batch": [5, 11, 18, 24, 29, 72], "get": [5, 11, 30, 73, 74], "logit": [5, 11, 18, 27, 28, 29, 33, 48, 52, 72], "prob": [5, 29, 34, 51], "conveni": [5, 10, 54], "interact": [5, 11], "environ": [5, 12, 13, 14, 16, 17, 73], "show": [5, 6], "progress": 5, "sentencepiec": [5, 6, 10, 74], "adapt": 5, "word": 5, "spm": [5, 6, 10, 74], "ct2_model": [5, 6, 7, 8, 9, 10, 11, 73], "sp": [5, 6, 10, 74], "sentencepieceprocessor": [5, 6, 10, 74], "what": [5, 74, 76], "mean": [5, 6, 64, 65, 67, 68], "life": [5, 11], "prompt_token": 5, "out_typ": [5, 6, 10, 74], "str": [5, 6, 10, 24, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74], "step_result": 5, "20": [5, 11, 29, 73], "max_length": [5, 6, 11, 24, 29, 51], "output_id": 5, "is_new_word": 5, "startswith": 5, "flush": 5, "append": [5, 11], "token_id": [5, 18, 28, 72], "If": [5, 9, 11, 12, 14, 16, 17, 19, 20, 21, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76], "break": 5, "loop": [5, 29], "background": 5, "To": [5, 11, 14, 15, 76], "stop": [5, 29, 34], "earli": 5, "close": 5, "callback": [5, 29, 34], "intern": [5, 73], "session": [5, 11], "static_prompt": [5, 17, 29], "onc": [5, 11, 14, 17, 29], "static": [5, 29, 30, 32, 37, 38, 39, 40, 41, 42, 43, 44], "state": [5, 11, 29], "futur": [5, 24, 29, 34, 49, 50, 51], "stablelm": 5, "ct2": [5, 6, 7, 8, 9, 10, 11, 73, 74], "autotoken": [5, 11], "from_pretrain": [5, 11, 44], "stabilityai": 5, "tune": [5, 11], "alpha": 5, "7b": [5, 11, 73], "system_prompt": 5, "help": [5, 14, 73, 76], "harmless": 5, "sourc": [5, 6, 10, 11, 12, 34, 38, 63, 67, 68], "ai": 5, "develop": [5, 11, 14], "excit": 5, "user": [5, 38], "refus": 5, "anyth": 5, "consid": [5, 11, 17, 29, 74], "harm": 5, "inform": [5, 12, 16, 30, 32, 73, 74], "poetri": 5, "short": 5, "stori": 5, "joke": 5, "particip": 5, "human": 5, "system_prompt_token": 5, "convert_ids_to_token": [5, 11], "mood": 5, "todai": 5, "assist": 5, "512": [5, 29], "end_token": [5, 29, 34], "50278": 5, "50279": 5, "50277": 5, "At": 5, "unlimit": [5, 24, 29, 34, 49, 50, 51], "clear": 5, "unload": [5, 15, 24, 29, 34, 49, 50, 51], "replica": 5, "its": [5, 14, 29, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "copi": [5, 32, 44, 49, 50, 51], "between": [5, 16, 30, 51, 73], "explicitli": [5, 14, 68], "No": [5, 6], "implicitli": [5, 11], "bart": 6, "multilingual_transform": 6, "transformer_align": 6, "transformer_lm": 6, "minim": [6, 29, 34], "path": [6, 7, 8, 11, 14, 16, 24, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 61, 63, 64, 66, 68, 69, 70, 71, 74], "data": [6, 17, 29, 32, 34, 38, 76], "pip": [6, 8, 9, 11, 74], "instal": [6, 8, 9, 11, 13, 16, 74], "convert": [6, 7, 8, 9, 10, 11, 32, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 60, 72, 73, 74, 76, 77], "model_path": [6, 7, 8, 16, 24, 29, 34, 38, 39, 41, 49, 50, 51, 73, 74], "pt": [6, 8, 38, 41, 73, 74], "data_dir": [6, 38], "output_dir": [6, 7, 8, 9, 10, 11, 37, 38, 39, 40, 41, 42, 43, 44, 59, 61, 63, 64, 66, 68, 69, 70, 71, 73, 74], "match": [6, 76], "behavior": [6, 12, 16, 73], "download": [6, 11, 44, 73, 74], "pretrain": [6, 10, 11, 44, 74], "wget": [6, 10, 74], "http": [6, 10, 11, 14, 29, 34, 40, 44, 49, 50, 51, 64, 65, 67, 68, 73, 74], "dl": 6, "fbaipublicfil": 6, "com": [6, 11, 14, 40, 44, 49, 50, 51, 74], "en": [6, 10, 11, 74], "join": [6, 34], "dict": [6, 24, 29, 34, 42, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "tar": [6, 74], "bz2": 6, "xf": [6, 74], "ende_ctranslate2": [6, 10, 74, 76], "h": [6, 9, 74, 76], "ello": [6, 76], "world": [6, 10, 11, 24, 34, 74, 76], "simplic": 6, "obtain": 6, "sacremos": 6, "bpe": 6, "fair": 6, "team": 6, "publish": [6, 11, 14, 49, 50, 51], "part": 6, "new": [6, 14, 32], "task": [6, 11, 17], "lm": 6, "gz": [6, 74], "wmt19_en_ct2": 6, "sampl": [6, 29, 34, 51], "score": [6, 17, 18, 27, 29, 31, 33, 34, 48, 51, 52, 72, 76], "special": [6, 29, 38, 76], "numpi": [6, 11, 24, 29, 32], "np": [6, 11, 16, 32], "sky": 6, "blue": 6, "exp": 6, "log_prob": [6, 18, 28, 31, 72], "multilingu": [6, 11, 38, 51], "fixed_dictionari": [6, 38], "418m": 6, "m2m_100": 6, "418m_last_checkpoint": 6, "2b": 6, "2b_last_checkpoint": 6, "model_dict": 6, "128k": 6, "txt": [6, 14, 34, 74], "m2m_100_418m_ct2": 6, "__x__": 6, "x": [6, 14, 16, 32], "fix": [6, 38], "dictionari": [6, 24, 29, 34, 38, 42, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "accept": [6, 11, 29, 34, 51, 73], "__en__": 6, "hello": [6, 8, 10, 11, 24, 34, 74, 76], "__de__": 6, "mbart50": 6, "ft": 6, "mbart50_ct2": 6, "ml50_lang": 6, "un": 6, "chief": 6, "militari": 6, "solut": 6, "syria": 6, "en_xx": 6, "ro_ro": 6, "npz": [7, 39], "vocab_path": [7, 39], "src": 7, "vocab": [7, 28], "yml": [7, 9, 39], "tgt": 7, "alreadi": [7, 11, 37, 38, 39, 40, 41, 42, 43, 44], "conv": 7, "altern": [8, 9, 29, 34], "directli": [8, 9, 14, 76], "releas": [8, 15, 16], "onmt_release_model": 8, "quickstart": [8, 13, 76], "type": [8, 24, 29, 32, 34, 47, 49, 50, 51, 57, 62, 64, 65, 74], "command": [8, 11, 14, 37, 38, 39, 40, 41, 42, 43, 44], "line": [8, 14, 34, 37, 38, 39, 40, 41, 42, 43, 44, 76], "dure": [8, 11, 14, 29, 34, 51, 73, 76], "sure": [8, 11, 16, 74], "case": [9, 14, 15, 16, 74], "pass": [9, 11, 17, 32, 76], "yaml": [9, 42], "don": [9, 11, 48], "t": [9, 11, 48], "checkpoint": [9, 42], "outsid": [9, 74], "collect": [10, 11, 48], "1000": 10, "sinc": [10, 11], "compat": [10, 12, 29, 34, 77], "model_dir": [10, 40, 43], "opus_model": 10, "english": [10, 11, 74], "german": [10, 11, 74], "pouta": 10, "csc": 10, "fi": 10, "2020": [10, 17], "02": 10, "26": 10, "zip": 10, "unzip": 10, "hug": [11, 44, 73], "face": [11, 44, 73], "codegen": 11, "m2m100": 11, "mbart": 11, "openai": [11, 40, 51], "gpt2": 11, "pegasu": 11, "xlm": 11, "roberta": 11, "torch": [11, 32, 44], "facebook": [11, 49, 50], "m2m100_418m": 11, "add": [11, 14, 37, 38, 39, 40, 41, 42, 43, 44, 56, 58, 64, 65, 66, 72, 74], "helsinki": [11, 74], "nlp": [11, 74], "wa": [11, 19, 20, 21, 27, 28, 33, 52, 53, 73], "fine": 11, "cnn": 11, "daili": 11, "mail": 11, "summar": 11, "pg": 11, "schedul": 11, "blackout": 11, "respons": 11, "forecast": 11, "wind": 11, "amid": 11, "dry": 11, "condit": 11, "aim": 11, "risk": 11, "wildfir": 11, "nearli": 11, "800": 11, "thousand": 11, "affect": 11, "shutoff": 11, "last": [11, 25, 28, 64], "through": 11, "middai": 11, "tomorrow": 11, "convert_tokens_to_id": 11, "skip_special_token": 11, "mask": 11, "bertmodel": 11, "layer": [11, 14, 17, 24, 25, 29, 34, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "shown": 11, "textattack": 11, "uncas": 11, "yelp": 11, "polar": 11, "model_nam": 11, "classifi": 11, "automodelforsequenceclassif": 11, "eval": 11, "good": 11, "worst": [11, 51], "experi": 11, "my": 11, "input_id": 11, "pooler_output": [11, 18, 25, 72], "as_tensor": [11, 32], "els": 11, "arrai": [11, 24, 29, 32, 49, 50, 51], "predicted_class_id": 11, "argmax": 11, "bigscienc": 11, "workshop": 11, "smallest": 11, "560m": 11, "am": 11, "start_token": [11, 29], "30": 11, "sequences_id": [11, 18, 27, 48, 52, 72], "cheap": 11, "light": 11, "distil": 11, "distilbertmodel": 11, "tii": 11, "finetun": 11, "mixtur": 11, "dataset": 11, "tiiuae": 11, "quantiz": [11, 13, 14, 17, 37, 38, 39, 40, 41, 42, 43, 44, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "float16": [11, 18, 22, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "trust_remote_cod": [11, 44], "prompt": [11, 17, 29, 51], "girafatron": 11, "obsess": 11, "giraff": 11, "gloriou": 11, "anim": 11, "earth": 11, "giraftron": 11, "believ": 11, "irrelev": 11, "compar": [11, 73], "majesti": 11, "ndaniel": 11, "ngirafatron": 11, "200": 11, "include_prompt_in_result": [11, 17, 29], "fals": [11, 17, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "rang": [11, 73], "scale": [11, 44, 62, 64, 65, 73], "billion": 11, "70": 11, "suffix": 11, "hf": 11, "meta": 11, "request": [11, 24, 29, 34, 49, 50, 51], "them": [11, 14, 44], "hub": [11, 44], "login": 11, "huggingfac": [11, 73], "cli": 11, "m2m100_418": 11, "src_lang": 11, "lang_code_to_token": 11, "style": 11, "scratch": 11, "1t": 11, "mosaicml": 11, "so": [11, 12, 16, 17, 29, 32, 34, 73, 74], "int8_float16": [11, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "eleutherai": 11, "20b": 11, "shock": 11, "scientist": 11, "600m": 11, "21": 11, "eng_latn": 11, "tgt_lang": 11, "fra_latn": 11, "gpt2_ct2": 11, "uncondit": 11, "bos_token": 11, "propos": 11, "santacod": 11, "reach": 11, "star": 11, "starcod": 11, "bigcod": 11, "starcoder_ct2": 11, "fim_prefix": 11, "def": 11, "print_hello_world": 11, "fim_suffix": 11, "fim_middl": 11, "pile": 11, "6b": 11, "gptj_ct2": 11, "branch": 11, "up": [11, 29, 49], "24gb": 11, "autoregress": 11, "gpt_neox_ct2": 11, "gptneox20b": 11, "64": [11, 12, 14, 29, 34, 73], "9": 11, "350m": 11, "gpt2token": 11, "plan": [11, 14], "bit": [11, 64, 65], "recommend": [11, 17], "activ": [11, 44, 56, 64, 65, 66, 67, 68, 72], "smoothquant": [11, 44], "repositori": [11, 13, 14], "activation_scal": [11, 44], "rescal": [11, 44], "smooth": [11, 44], "accuraci": [11, 44, 73], "hei": 11, "consciou": 11, "talk": 11, "me": 11, "pre": [11, 44, 64, 65, 67, 68], "multi": [11, 64, 65, 67, 68], "unsupervis": 11, "supervis": 11, "variant": 11, "t5v1": 11, "mt5": 11, "flan": 11, "input_text": [11, 74], "hous": 11, "wonder": 11, "input_token": [11, 74], "output_token": [11, 74], "output_text": [11, 74], "speech": [11, 13, 14, 49, 50, 51, 52], "recognit": [11, 13, 14, 49, 50, 51], "23": 11, "39m": 11, "larger": [11, 17], "tini": 11, "librosa": 11, "resampl": 11, "audio": [11, 49, 50, 51], "_": [11, 16], "wav": 11, "sr": 11, "16000": 11, "mono": 11, "second": 11, "processor": [11, 12], "whisperprocessor": 11, "return_tensor": 11, "sampling_r": 11, "storageview": [11, 18, 24, 29, 49, 50, 51, 72], "from_arrai": [11, 18, 32, 72], "input_featur": 11, "detect": [11, 73], "detect_languag": [11, 48, 51, 72], "f": 11, "github": [11, 13, 14, 40, 44, 49, 50, 51, 73], "startoftranscript": 11, "transcrib": 11, "notimestamp": 11, "remov": 11, "timestamp": [11, 51], "window": [11, 14], "transcript": 11, "longer": [11, 16], "aggreg": 11, "valid": [12, 56, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "prebuilt": [12, 73], "compil": [12, 74], "x86": [12, 14, 73], "sse": 12, "aarch64": [12, 14, 73], "arm64": [12, 14, 16, 73], "On": [12, 14, 73], "platform": [12, 73], "particular": 12, "onednn": [12, 14, 73], "wherea": 12, "amd": [12, 14], "ct2_use_mkl": 12, "ct2_force_cpu_isa": 12, "nvidia": [12, 14, 17, 73], "capabl": [12, 17, 73], "equal": 12, "driver": 12, "welcom": 13, "refer": [13, 73], "multithread": 13, "parallel": [13, 24, 29, 34, 49, 50, 51, 64, 65], "tip": 13, "hardwar": 13, "ask": 13, "question": 13, "wheel": [14, 16], "pypi": 14, "linux": 14, "maco": [14, 16], "19": 14, "manylinux2014": 14, "convolut": 14, "cudnn": 14, "visual": 14, "imag": [14, 76], "registri": 14, "pull": 14, "ghcr": [14, 76], "io": [14, 73, 76], "latest": [14, 42, 76], "ubuntu22": [14, 76], "04": [14, 76], "cuda11": [14, 76], "opt": 14, "packag": [14, 74], "rm": [14, 76], "clone": 14, "git": 14, "submodul": 14, "recurs": [14, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "cmake": [14, 74], "mkdir": [14, 74], "cd": [14, 74], "j4": [14, 74], "sudo": 14, "ldconfig": 14, "pybind11": 14, "r": 14, "install_requir": 14, "setup": [14, 16], "bdist_wheel": 14, "dist": 14, "whl": 14, "addit": [14, 16, 76], "ctranslate2_root": 14, "ld_library_path": [14, 16], "doption": 14, "bold": 14, "build_cli": 14, "ON": 14, "client": [14, 77], "build_test": 14, "test": [14, 49], "cmake_cxx_flag": 14, "cmake_install_prefix": 14, "cuda_arch_list": 14, "auto": [14, 24, 29, 34, 49, 50, 51, 73, 74, 76], "cuda_select_nvcc_arch_flag": 14, "cuda_dynamic_load": 14, "dynam": [14, 17], "link": 14, "against": 14, "cuda_nvcc_flag": 14, "nvcc": 14, "enable_cpu_dispatch": 14, "kernel": [14, 51, 73], "march": 14, "enable_profil": 14, "profil": 14, "openmp_runtim": 14, "comp": 14, "none": [14, 22, 23, 24, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 55, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "openmp": [14, 16, 24, 29, 34, 49, 50, 51], "with_cuda": 14, "with_cudnn": 14, "with_dnnl": 14, "k": [14, 29, 34, 51, 76], "dnnl": 14, "with_mkl": 14, "with_acceler": 14, "appl": [14, 73], "with_openbla": 14, "openbla": 14, "with_rui": 14, "rui": [14, 73], "respect": 14, "dwith_cuda": 14, "dwith_cudnn": 14, "dwith_mkl": 14, "2019": 14, "dwith_dnnl": 14, "dwith_acceler": 14, "dwith_openbla": 14, "dwith_rui": 14, "resourc": 15, "delet": [15, 24, 29, 34, 49, 50, 51], "del": 15, "might": 15, "temporarili": 15, "later": [15, 16], "unload_model": [15, 18, 24, 29, 34, 48, 49, 50, 51, 72], "load_model": [15, 18, 24, 29, 34, 36, 44, 48, 49, 50, 51, 72], "purpos": 15, "either": [15, 24, 29, 42], "fulli": [15, 24, 29, 34, 42, 49, 50, 51], "matmul": 16, "softmax": [16, 17], "intra_thread": [16, 17, 24, 29, 34, 49, 50, 51], "omp_": 16, "b": 16, "thread_pool": 16, "process": [16, 17, 24, 26, 29, 30, 34, 49, 50, 51], "creat": [16, 24, 29, 32, 42, 64, 68], "worker": [16, 29, 34, 49, 50, 51], "inter_thread": [16, 17, 24, 29, 34, 49, 50, 51], "device_index": [16, 17, 18, 24, 29, 32, 34, 47, 48, 49, 50, 51, 72], "stream": [16, 17, 29, 34], "note": 16, "workload": 16, "global": 16, "throughput": 16, "submit": 16, "concurr": [16, 29, 34], "max_batch_s": [16, 17, 29, 34], "split": [16, 17, 29, 34], "accord": 16, "sub": 16, "becaus": 16, "gil": 16, "too": 16, "big": 16, "tensor_parallel": [16, 18, 24, 29, 34, 48, 49, 50, 51, 72], "mpi": [16, 30], "hostfil": 16, "ipaddress": 16, "dn": 16, "slot": [16, 24, 29, 34, 49, 50, 51], "nbgpu1": 16, "nbgpu2": 16, "multiprocess": 16, "mpirun": 16, "nbgpuexpect": 16, "python3": 16, "re": 16, "master": 16, "slave": 16, "connect": [16, 64, 65], "pair": [16, 51], "ssh": 16, "pubkei": 16, "necessari": 16, "virtual_env_prompt": 16, "virtual_env": 16, "doc": 16, "mpiinfo": [16, 18, 72], "getcurrank": [16, 18, 30, 72], "boost": 16, "slower": 16, "latenc": 16, "otherwis": [16, 64, 65, 74], "ani": [16, 29, 34], "retriev": 16, "async_result": 16, "batch_gener": 16, "extend": [16, 37, 39, 59, 60, 61, 63], "block": [16, 19, 20, 21, 24, 29, 34, 49, 50, 51, 53, 64, 65], "until": [16, 19, 20, 21, 24, 29, 34, 49, 50, 51, 53], "queue": [16, 24, 29, 34, 49, 50, 51], "max_queued_batch": [16, 24, 29, 34, 49, 50, 51], "constructor": 16, "further": 17, "int8": [17, 18, 22, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "volum": 17, "prefer": 17, "over": [17, 29, 34], "whose": [17, 29, 34], "_file": 17, "_iter": 17, "total": [17, 26], "physic": 17, "ct2_use_experimental_packed_gemm": 17, "whenev": 17, "tensor": [17, 24, 29, 32, 34, 49, 50, 51], "id": [17, 24, 27, 28, 29, 30, 34, 49, 50, 51, 52], "beam": [17, 29, 34, 51], "return_scor": [17, 27, 29, 33, 34, 51, 52], "predict": [17, 29, 34, 51], "skip": 17, "_batch": 17, "sort": [17, 29, 34], "length": [17, 24, 29, 34, 51, 64, 65], "chunk": [17, 29, 34], "element": 17, "batch_typ": [17, 29, 34], "constant": 17, "reduct": 17, "wngt": 17, "submiss": 17, "asyncgenerationresult": [18, 29, 72], "done": [18, 19, 20, 21, 48, 53, 72], "asyncscoringresult": [18, 29, 34, 72], "asynctranslationresult": [18, 34, 72], "datatyp": [18, 32, 72], "__init__": [18, 22, 23, 24, 29, 34, 36, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 56, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "bfloat16": [18, 22, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "float32": [18, 22, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "int16": [18, 22, 24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "int32": [18, 22, 24, 29, 32, 72, 73], "compute_typ": [18, 24, 29, 34, 48, 49, 50, 51, 72, 73], "model_is_load": [18, 24, 29, 34, 48, 49, 50, 51, 72], "num_active_batch": [18, 24, 29, 34, 48, 49, 50, 51, 72], "num_encod": [18, 24, 72], "num_queued_batch": [18, 24, 29, 34, 48, 49, 50, 51, 72], "encoderforwardoutput": [18, 24, 72, 77], "last_hidden_st": [18, 25, 72], "executionstat": [18, 34, 72], "num_exampl": [18, 26, 72], "num_token": [18, 26, 72], "total_time_in_m": [18, 26, 72], "generationresult": [18, 19, 29, 72, 77], "generationstepresult": [18, 29, 34, 72], "batch_id": [18, 28, 72], "hypothesis_id": [18, 28, 72], "is_last": [18, 28, 72], "async_generate_token": [18, 29, 72], "generate_iter": [18, 29, 72], "score_iter": [18, 29, 34, 72], "num_gener": [18, 29, 72], "getlocalrank": [18, 30, 72], "getnrank": [18, 30, 72], "scoringresult": [18, 20, 29, 34, 72, 77], "to_devic": [18, 32, 72], "dtype": [18, 32, 72], "shape": [18, 24, 29, 32, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "translationresult": [18, 21, 34, 72, 76, 77], "attent": [18, 24, 29, 33, 34, 49, 50, 51, 64, 65, 67, 68, 71, 72], "score_fil": [18, 34, 72], "translate_fil": [18, 34, 72], "translate_iter": [18, 34, 72], "num_transl": [18, 34, 72], "get_cuda_device_count": [18, 72], "get_log_level": [18, 72], "get_supported_compute_typ": [18, 72, 73], "set_random_se": [18, 72], "wrapper": [19, 20, 21, 53], "inherit": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "pybind11_builtin": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 49, 50, 51, 52, 53], "pybind11_object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 49, 50, 51, 52, 53], "bool": [19, 20, 21, 24, 29, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "except": [19, 20, 21, 53, 73], "rais": [19, 20, 21, 32, 37, 38, 39, 40, 41, 42, 43, 44, 51, 53, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "attribut": [22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 49, 50, 51, 52, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71], "int": [22, 23, 24, 29, 30, 34, 45, 46, 47, 49, 50, 51, 54, 55, 64, 65, 67, 68, 74, 76], "properti": [22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 49, 50, 51, 52, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71], "union": [24, 29, 34, 42, 49, 50, 51, 68, 76], "flash_attent": [24, 29, 34, 49, 50, 51], "initi": [24, 29, 34, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "map": [24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76], "int8_float32": [24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "int8_bfloat16": [24, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 51, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73], "per": [24, 29, 34, 49, 50, 51, 73], "free": [24, 29, 34, 49, 50, 51], "flash": [24, 29, 34, 49, 50, 51], "self": [24, 29, 34, 49, 50, 51, 65, 67, 68], "content": [24, 29, 34, 49, 50, 51], "byte": [24, 29, 34, 49, 50, 51], "act": [24, 29, 34, 49, 50, 51], "identifi": [24, 29, 34, 49, 50, 51], "token_type_id": 24, "dens": [24, 29], "batch_siz": [24, 29, 49, 50, 51], "keep_cach": [24, 29, 34, 49, 50, 51], "to_cpu": [24, 29, 34, 49, 50, 51], "attach": [24, 29, 34, 49, 50, 51], "enough": [24, 29, 34, 49, 50, 51], "quickli": [24, 29, 34, 49, 50, 51], "resum": [24, 29, 34, 49, 50, 51], "readi": [24, 29, 34, 49, 50, 51, 74], "wait": [24, 29, 34, 49, 50, 51], "structur": [26, 29, 34], "statist": [26, 34], "millisecond": 26, "return_logits_vocab": [27, 29, 33, 34, 51, 52], "index": [28, 29, 32, 47, 51, 65, 68], "return_log_prob": [28, 29, 34], "50": [29, 51], "async": 29, "min_length": 29, "sampling_topp": [29, 34], "float": [29, 34, 49, 50, 51, 64, 65], "repetition_penalti": [29, 34, 51], "no_repeat_ngram_s": [29, 34, 51], "disable_unk": [29, 34], "suppress_sequ": [29, 34], "cache_static_prompt": 29, "callabl": [29, 34], "asynciter": 29, "yield": [29, 34], "cumul": [29, 34], "exce": [29, 34], "temperatur": [29, 34, 51], "random": [29, 34, 51, 55], "penalti": [29, 34, 51], "penal": [29, 34, 51], "prevent": [29, 34, 51], "repetit": [29, 34, 51], "ngram": [29, 34, 51], "unknown": [29, 34], "eo": [29, 34], "simplifi": 29, "obj": 29, "iter": [29, 34], "search": [29, 34, 51], "probabilti": 29, "unscal": 29, "patienc": [29, 34, 51], "length_penalti": [29, 34, 51], "return_end_token": [29, 34], "constrain": 29, "kv": [29, 64, 65], "remain": 29, "pad": [29, 34, 51], "posit": [29, 34, 64, 65, 67, 68], "greedi": [29, 34, 51], "factor": [29, 34, 51, 58, 64, 65], "arxiv": [29, 34, 51, 64, 65, 67, 68], "org": [29, 34, 51, 64, 65, 67, 68], "ab": [29, 34, 51, 64, 65, 67, 68, 73], "2204": [29, 34, 51], "05424": [29, 34, 51], "continu": [29, 34, 51], "finish": [29, 34, 51], "exponenti": [29, 34, 51], "unconstrain": [29, 34], "expand": [29, 34], "generationopt": [29, 77], "32": [29, 34], "kwarg": [29, 34, 44], "built": [29, 34, 42], "arbitrarili": [29, 34], "materi": [29, 34], "prefetch": [29, 34], "local": [29, 34], "commun": 30, "connexion": 30, "rank": 30, "interfac": 32, "ones": 32, "y": 32, "storag": 32, "view": 32, "2x4": 32, "z": 32, "valueerror": [32, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "unsupport": 32, "matrix": 33, "return_attent": [33, 34], "256": 34, "use_vmap": [34, 76], "offset": 34, "ignor": 34, "calcul": 34, "source_path": 34, "target_path": 34, "output_path": 34, "read_batch_s": 34, "with_tokens_scor": 34, "source_tokenize_fn": 34, "target_tokenize_fn": 34, "target_detokenize_fn": 34, "score_token_0": 34, "score_token_1": 34, "normal": [34, 64, 65, 67, 68], "coverage_penalti": 34, "replace_unknown": 34, "coverag": 34, "bias": [34, 64, 65], "given": [34, 51], "vector": [34, 74, 76], "translationopt": [34, 77], "with_scor": 34, "tokenize_fn": 34, "lambda": 34, "strip": 34, "detokenize_fn": 34, "input_fil": 34, "helper": [35, 37, 38, 39, 40, 41, 42, 43, 44], "seem": 35, "convert_from_arg": [36, 37, 38, 39, 40, 41, 42, 43, 44, 72], "declare_argu": [36, 37, 38, 39, 40, 41, 42, 43, 44, 72], "fairseqconvert": [36, 37, 72], "marianconvert": [36, 37, 43, 72], "openaigpt2convert": [36, 37, 72], "opennmtpyconvert": [36, 37, 72], "opennmttfconvert": [36, 37, 72], "from_config": [36, 42, 56, 64, 68, 72], "opusmtconvert": [36, 39, 72], "transformersconvert": [36, 37, 72], "get_model_fil": [36, 44, 72], "load_token": [36, 44, 72], "abc": 37, "vmap": [37, 38, 39, 40, 41, 42, 43, 44, 76], "scheme": [37, 38, 39, 40, 41, 42, 43, 44, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "runtimeerror": [37, 38, 39, 40, 41, 42, 43, 44, 51], "notimplementederror": [37, 38, 39, 40, 41, 42, 43, 44], "cannot": [37, 38, 39, 40, 41, 42, 43, 44], "arg": [37, 38, 39, 40, 41, 42, 43, 44], "namespac": [37, 38, 39, 40, 41, 42, 43, 44], "pars": [37, 38, 39, 40, 41, 42, 43, 44], "parser": [37, 38, 39, 40, 41, 42, 43, 44], "argumentpars": [37, 38, 39, 40, 41, 42, 43, 44], "source_lang": 38, "target_lang": 38, "no_default_special_token": 38, "user_dir": 38, "declar": [38, 60], "extens": 38, "classmethod": [42, 64, 68], "auto_config": 42, "checkpoint_path": 42, "resolv": 42, "catalog": 42, "model_name_or_path": 44, "copy_fil": [44, 73], "load_as_float16": 44, "low_cpu_mem_usag": 44, "mit": 44, "han": 44, "lab": 44, "filenam": [44, 59, 61, 63, 64, 66, 68, 69, 70, 71], "torch_dtyp": 44, "model_class": 44, "tokenizer_class": 44, "visibl": 45, "fit": 48, "wav2vec2": [48, 72], "num_work": [48, 49, 50, 51, 72], "wav2vec2bert": [48, 72], "whisper": [48, 52, 71, 72, 75], "align": [48, 51, 65, 68, 72], "is_multilingu": [48, 51, 72], "n_mel": [48, 51, 72], "num_languag": [48, 51, 72], "whispergenerationresult": [48, 51, 53, 72], "no_speech_prob": [48, 52, 72], "whispergenerationresultasync": [48, 51, 72], "facebookresearch": [49, 50], "tree": [49, 50], "wav2vec": [49, 50], "hidden_st": 49, "v": [49, 76], "blob": 49, "59c7dda738892df7a064aa360d0e45a4c3840b07": 49, "test_transform": 49, "l1028": 49, "raw": 49, "vad": 49, "409": 49, "131200": 49, "mel": [50, 51], "spectogram": [50, 51], "80": 50, "3000": 50, "start_sequ": 51, "text_token": 51, "num_fram": 51, "median_filter_width": 51, "whisperalignmentresult": 51, "chunk_length": 51, "d_model": 51, "frame": 51, "width": 51, "median": 51, "tupl": [51, 68], "448": 51, "return_no_speech_prob": [51, 52], "max_initial_timestamp_index": 51, "suppress_blank": 51, "suppress_token": 51, "suppress": 51, "blank": 51, "begin": 51, "dimens": [51, 64, 65, 68], "seed": 55, "gelu": [56, 57, 72], "gelusigmoid": [56, 57, 72], "gelutanh": [56, 57, 72], "relu": [56, 57, 64, 65, 67, 68, 72], "swish": [56, 57, 72], "sigmoid": [56, 57, 72], "tanh": [56, 57, 66, 72], "embeddingsmerg": [56, 67, 68, 72], "concat": [56, 58, 67, 68, 72], "languagemodelspec": [56, 61, 64, 66, 69, 70, 71, 72], "get_default_config": [56, 59, 61, 63, 64, 66, 68, 69, 70, 71, 72], "get_vocabulary_s": [56, 59, 64, 66, 69, 70, 71, 72], "register_fil": [56, 59, 61, 63, 64, 66, 68, 69, 70, 71, 72], "register_vocabulari": [56, 59, 64, 66, 69, 70, 71, 72], "modelspec": [56, 59, 60, 63, 72], "rotaryscalingtyp": [56, 64, 65, 72], "linear": [56, 62, 64, 65, 67, 68, 72, 73], "llama3": [56, 62, 72], "su": [56, 62, 64, 65, 72], "sequencetosequencemodelspec": [56, 61, 68, 72], "get_source_vocabulary_s": [56, 63, 68, 72], "get_target_vocabulary_s": [56, 63, 68, 72], "register_source_vocabulari": [56, 63, 68, 72], "register_target_vocabulari": [56, 63, 68, 72], "register_vocabulary_map": [56, 63, 68, 72], "transformerdecodermodelspec": [56, 59, 72], "transformerdecoderspec": [56, 60, 64, 68, 72], "transformerencodermodelspec": [56, 59, 72], "transformerencoderspec": [56, 60, 66, 68, 72], "transformerspec": [56, 63, 72], "wav2vec2bertspec": [56, 59, 72], "wav2vec2spec": [56, 59, 72], "whisperspec": [56, 59, 72], "spec": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "enum": [57, 58, 62], "intenum": [57, 58, 62], "6": [57, 73], "merg": [58, 67, 68], "abstract": [59, 63], "alia": [59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "regist": [59, 61, 63, 64, 66, 68, 69, 70, 71], "verifi": [59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "ndarrai": [59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "children": [59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "prepend": [59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71], "layout": [59, 61, 63, 64, 66, 68, 69, 70, 71], "renam": [59, 61, 63, 64, 66, 68, 69, 70, 71], "frozenattr": 60, "rope": [62, 64, 65], "num_lay": [64, 65, 67, 68, 70], "num_head": [64, 65, 67, 68, 70], "pre_norm": [64, 65, 67, 68], "layernorm_embed": [64, 65, 67, 68], "no_final_norm": [64, 65, 67, 68], "project_in_out": [64, 65], "with_relative_posit": [64, 68], "ffn_glu": [64, 65, 67, 68], "rms_norm": [64, 65, 67, 68], "alibi": [64, 65], "alibi_use_positive_posit": [64, 65], "scale_alibi": [64, 65], "rotary_dim": [64, 65], "rotary_interleav": [64, 65], "rotary_scaling_typ": [64, 65], "rotary_scaling_factor": [64, 65], "rotary_bas": [64, 65], "10000": [64, 65], "original_max_position_embed": [64, 65], "max_position_embed": [64, 65], "parallel_residu": [64, 65], "shared_layer_norm": [64, 65], "pre_post_layer_norm": [64, 65], "multi_query_attent": [64, 65, 67, 68], "num_heads_kv": [64, 65], "head_dim": [64, 65], "sliding_window": [64, 65], "quant_typ": [64, 65], "quant_group_s": [64, 65], "quant_bit": [64, 65], "head": [64, 65, 67, 68, 71], "norm": [64, 65, 67, 68], "feed": [64, 65, 67, 68], "network": [64, 65, 67, 68], "rel": [64, 65, 67, 68], "gate": [64, 65, 67, 68], "unit": [64, 65, 67, 68], "ffn": [64, 65, 67, 68], "2002": [64, 65, 67, 68], "05202": [64, 65, 67, 68], "squar": [64, 65, 67, 68], "definit": [64, 65], "dot": [64, 65], "rotari": [64, 65], "interleav": [64, 65], "slice": [64, 65], "half": [64, 65, 73], "period": [64, 65], "origin": [64, 65, 73], "max": [64, 65, 73], "residu": [64, 65], "j": [64, 65, 73], "neox": [64, 65], "post": [64, 65], "queri": [64, 65, 67, 68, 73], "retain": [64, 65], "awq": [64, 65], "group": [64, 65], "ex": [64, 65], "4bit": [64, 65], "with_encoder_attent": 65, "relative_posit": [65, 67], "relative_attention_bia": [65, 67, 68], "alignment_lay": [65, 68], "alignment_head": [65, 68], "sublay": 65, "1803": [65, 67, 68], "02155": [65, 67, 68], "t5": [65, 67, 68], "paper": [65, 67, 68], "1910": [65, 67, 68], "10683": [65, 67, 68], "pooling_lay": 66, "pooling_activ": 66, "num_source_embed": [67, 68], "embeddings_merg": [67, 68], "specifi": [67, 68], "invari": 68, "hidden": 68, "num_hidden_lay": 69, "num_adapter_lay": 69, "vocab_s": [69, 70], "return_hidden": [69, 70], "feat_lay": 70, "num_encoder_lay": 71, "num_encoder_head": 71, "num_decoder_lay": 71, "num_decoder_head": 71, "littl": 73, "degrad": 73, "benchmark": 73, "readm": 73, "typic": 73, "whatev": 73, "ensur": 73, "tabl": 73, "32k": 73, "364mb": 73, "187mb": 73, "182mb": 73, "100mb": 73, "95mb": 73, "tri": 73, "fallback": 73, "ct2_verbos": 73, "equat": 73, "wu": 73, "2016": 73, "127": 73, "w": 73, "wq": 73, "round": 73, "formula": 73, "symmetr": 73, "absolut": 73, "min": 73, "actual": 73, "devlin": 73, "2017": 73, "As": 73, "suggest": 73, "author": 73, "idea": 73, "give": 73, "store": 73, "handl": [73, 74], "zero": 73, "theblok": 73, "co": 73, "autoawq": 73, "casper": 73, "hansen": 73, "gemv": 73, "bunch": 74, "variou": 74, "s3": 74, "amazonaw": 74, "wmt": 74, "pyonmt": 74, "averag": 74, "epoch": 74, "hallo": 74, "welt": 74, "successfulli": 74, "brows": 74, "cmake_prefix_path": 74, "ctranslate_install_path": 74, "pwd": [74, 76], "dcmake_install_prefix": 74, "cmakelist": 74, "cmake_minimum_requir": 74, "ctranslate2_demo": 74, "find_packag": 74, "add_execut": 74, "cpp": 74, "target_link_librari": 74, "tokenis": 74, "look": 74, "iostream": [74, 76], "argc": 74, "char": 74, "argv": 74, "const": [74, 76], "std": [74, 76], "modelload": 74, "model_load": 74, "cout": [74, 76], "endl": [74, 76], "ctranslat": 74, "dcmake_prefix_path": 74, "hall": 74, "properli": 74, "detokenis": 74, "well": 76, "advanc": 76, "docker": 76, "echo": 76, "l": 76, "vocab_map": 76, "gram": 76, "associ": 76, "src_1": 76, "src_2": 76, "src_n": 76, "tab": 76, "tgt_1": 76, "tgt_2": 76, "tgt_k": 76, "assioc": 76, "semant": 77, "backward": 77, "scoringopt": 77, "evolv": 77}, "objects": {"": [[18, 0, 0, "-", "ctranslate2"]], "ctranslate2": [[19, 1, 1, "", "AsyncGenerationResult"], [20, 1, 1, "", "AsyncScoringResult"], [21, 1, 1, "", "AsyncTranslationResult"], [22, 1, 1, "", "DataType"], [23, 1, 1, "", "Device"], [24, 1, 1, "", "Encoder"], [25, 1, 1, "", "EncoderForwardOutput"], [26, 1, 1, "", "ExecutionStats"], [27, 1, 1, "", "GenerationResult"], [28, 1, 1, "", "GenerationStepResult"], [29, 1, 1, "", "Generator"], [30, 1, 1, "", "MpiInfo"], [31, 1, 1, "", "ScoringResult"], [32, 1, 1, "", "StorageView"], [33, 1, 1, "", "TranslationResult"], [34, 1, 1, "", "Translator"], [35, 5, 1, "", "contains_model"], [36, 0, 0, "-", "converters"], [45, 5, 1, "", "get_cuda_device_count"], [46, 5, 1, "", "get_log_level"], [47, 5, 1, "", "get_supported_compute_types"], [48, 0, 0, "-", "models"], [54, 5, 1, "", "set_log_level"], [55, 5, 1, "", "set_random_seed"], [56, 0, 0, "-", "specs"]], "ctranslate2.AsyncGenerationResult": [[19, 2, 1, "", "done"], [19, 2, 1, "", "result"]], "ctranslate2.AsyncScoringResult": [[20, 2, 1, "", "done"], [20, 2, 1, "", "result"]], "ctranslate2.AsyncTranslationResult": [[21, 2, 1, "", "done"], [21, 2, 1, "", "result"]], "ctranslate2.DataType": [[22, 2, 1, "", "__init__"], [22, 3, 1, "", "bfloat16"], [22, 3, 1, "", "float16"], [22, 3, 1, "", "float32"], [22, 3, 1, "", "int16"], [22, 3, 1, "", "int32"], [22, 3, 1, "", "int8"], [22, 4, 1, "", "name"], [22, 4, 1, "", "value"]], "ctranslate2.Device": [[23, 2, 1, "", "__init__"], [23, 3, 1, "", "cpu"], [23, 3, 1, "", "cuda"], [23, 4, 1, "", "name"], [23, 4, 1, "", "value"]], "ctranslate2.Encoder": [[24, 2, 1, "", "__init__"], [24, 4, 1, "", "compute_type"], [24, 4, 1, "", "device"], [24, 4, 1, "", "device_index"], [24, 2, 1, "", "forward_batch"], [24, 2, 1, "", "load_model"], [24, 4, 1, "", "model_is_loaded"], [24, 4, 1, "", "num_active_batches"], [24, 4, 1, "", "num_encoders"], [24, 4, 1, "", "num_queued_batches"], [24, 4, 1, "", "tensor_parallel"], [24, 2, 1, "", "unload_model"]], "ctranslate2.EncoderForwardOutput": [[25, 4, 1, "", "last_hidden_state"], [25, 4, 1, "", "pooler_output"]], "ctranslate2.ExecutionStats": [[26, 4, 1, "", "num_examples"], [26, 4, 1, "", "num_tokens"], [26, 4, 1, "", "total_time_in_ms"]], "ctranslate2.GenerationResult": [[27, 4, 1, "", "logits"], [27, 4, 1, "", "scores"], [27, 4, 1, "", "sequences"], [27, 4, 1, "", "sequences_ids"]], "ctranslate2.GenerationStepResult": [[28, 4, 1, "", "batch_id"], [28, 4, 1, "", "hypothesis_id"], [28, 4, 1, "", "is_last"], [28, 4, 1, "", "log_prob"], [28, 4, 1, "", "logits"], [28, 4, 1, "", "step"], [28, 4, 1, "", "token"], [28, 4, 1, "", "token_id"]], "ctranslate2.Generator": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "async_generate_tokens"], [29, 4, 1, "", "compute_type"], [29, 4, 1, "", "device"], [29, 4, 1, "", "device_index"], [29, 2, 1, "", "forward_batch"], [29, 2, 1, "", "generate_batch"], [29, 2, 1, "", "generate_iterable"], [29, 2, 1, "", "generate_tokens"], [29, 2, 1, "", "load_model"], [29, 4, 1, "", "model_is_loaded"], [29, 4, 1, "", "num_active_batches"], [29, 4, 1, "", "num_generators"], [29, 4, 1, "", "num_queued_batches"], [29, 2, 1, "", "score_batch"], [29, 2, 1, "", "score_iterable"], [29, 4, 1, "", "tensor_parallel"], [29, 2, 1, "", "unload_model"]], "ctranslate2.MpiInfo": [[30, 2, 1, "", "getCurRank"], [30, 2, 1, "", "getLocalRank"], [30, 2, 1, "", "getNRanks"]], "ctranslate2.ScoringResult": [[31, 4, 1, "", "log_probs"], [31, 4, 1, "", "tokens"]], "ctranslate2.StorageView": [[32, 4, 1, "", "device"], [32, 4, 1, "", "device_index"], [32, 4, 1, "", "dtype"], [32, 2, 1, "", "from_array"], [32, 4, 1, "", "shape"], [32, 2, 1, "", "to"], [32, 2, 1, "", "to_device"]], "ctranslate2.TranslationResult": [[33, 4, 1, "", "attention"], [33, 4, 1, "", "hypotheses"], [33, 4, 1, "", "logits"], [33, 4, 1, "", "scores"]], "ctranslate2.Translator": [[34, 2, 1, "", "__init__"], [34, 4, 1, "", "compute_type"], [34, 4, 1, "", "device"], [34, 4, 1, "", "device_index"], [34, 2, 1, "", "generate_tokens"], [34, 2, 1, "", "load_model"], [34, 4, 1, "", "model_is_loaded"], [34, 4, 1, "", "num_active_batches"], [34, 4, 1, "", "num_queued_batches"], [34, 4, 1, "", "num_translators"], [34, 2, 1, "", "score_batch"], [34, 2, 1, "", "score_file"], [34, 2, 1, "", "score_iterable"], [34, 4, 1, "", "tensor_parallel"], [34, 2, 1, "", "translate_batch"], [34, 2, 1, "", "translate_file"], [34, 2, 1, "", "translate_iterable"], [34, 2, 1, "", "unload_model"]], "ctranslate2.converters": [[37, 1, 1, "", "Converter"], [38, 1, 1, "", "FairseqConverter"], [39, 1, 1, "", "MarianConverter"], [40, 1, 1, "", "OpenAIGPT2Converter"], [41, 1, 1, "", "OpenNMTPyConverter"], [42, 1, 1, "", "OpenNMTTFConverter"], [43, 1, 1, "", "OpusMTConverter"], [44, 1, 1, "", "TransformersConverter"]], "ctranslate2.converters.Converter": [[37, 2, 1, "", "convert"], [37, 2, 1, "", "convert_from_args"], [37, 2, 1, "", "declare_arguments"]], "ctranslate2.converters.FairseqConverter": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "convert"], [38, 2, 1, "", "convert_from_args"], [38, 2, 1, "", "declare_arguments"]], "ctranslate2.converters.MarianConverter": [[39, 2, 1, "", "__init__"], [39, 2, 1, "", "convert"], [39, 2, 1, "", "convert_from_args"], [39, 2, 1, "", "declare_arguments"]], "ctranslate2.converters.OpenAIGPT2Converter": [[40, 2, 1, "", "__init__"], [40, 2, 1, "", "convert"], [40, 2, 1, "", "convert_from_args"], [40, 2, 1, "", "declare_arguments"]], "ctranslate2.converters.OpenNMTPyConverter": [[41, 2, 1, "", "__init__"], [41, 2, 1, "", "convert"], [41, 2, 1, "", "convert_from_args"], [41, 2, 1, "", "declare_arguments"]], "ctranslate2.converters.OpenNMTTFConverter": [[42, 2, 1, "", "__init__"], [42, 2, 1, "", "convert"], [42, 2, 1, "", "convert_from_args"], [42, 2, 1, "", "declare_arguments"], [42, 2, 1, "", "from_config"]], "ctranslate2.converters.OpusMTConverter": [[43, 2, 1, "", "__init__"], [43, 2, 1, "", "convert"], [43, 2, 1, "", "convert_from_args"], [43, 2, 1, "", "declare_arguments"]], "ctranslate2.converters.TransformersConverter": [[44, 2, 1, "", "__init__"], [44, 2, 1, "", "convert"], [44, 2, 1, "", "convert_from_args"], [44, 2, 1, "", "declare_arguments"], [44, 2, 1, "", "get_model_file"], [44, 2, 1, "", "load_model"], [44, 2, 1, "", "load_tokenizer"]], "ctranslate2.models": [[49, 1, 1, "", "Wav2Vec2"], [50, 1, 1, "", "Wav2Vec2Bert"], [51, 1, 1, "", "Whisper"], [52, 1, 1, "", "WhisperGenerationResult"], [53, 1, 1, "", "WhisperGenerationResultAsync"]], "ctranslate2.models.Wav2Vec2": [[49, 2, 1, "", "__init__"], [49, 4, 1, "", "compute_type"], [49, 4, 1, "", "device"], [49, 4, 1, "", "device_index"], [49, 2, 1, "", "encode"], [49, 2, 1, "", "load_model"], [49, 4, 1, "", "model_is_loaded"], [49, 4, 1, "", "num_active_batches"], [49, 4, 1, "", "num_queued_batches"], [49, 4, 1, "", "num_workers"], [49, 4, 1, "", "tensor_parallel"], [49, 2, 1, "", "unload_model"]], "ctranslate2.models.Wav2Vec2Bert": [[50, 2, 1, "", "__init__"], [50, 4, 1, "", "compute_type"], [50, 4, 1, "", "device"], [50, 4, 1, "", "device_index"], [50, 2, 1, "", "encode"], [50, 2, 1, "", "load_model"], [50, 4, 1, "", "model_is_loaded"], [50, 4, 1, "", "num_active_batches"], [50, 4, 1, "", "num_queued_batches"], [50, 4, 1, "", "num_workers"], [50, 4, 1, "", "tensor_parallel"], [50, 2, 1, "", "unload_model"]], "ctranslate2.models.Whisper": [[51, 2, 1, "", "__init__"], [51, 2, 1, "", "align"], [51, 4, 1, "", "compute_type"], [51, 2, 1, "", "detect_language"], [51, 4, 1, "", "device"], [51, 4, 1, "", "device_index"], [51, 2, 1, "", "encode"], [51, 2, 1, "", "generate"], [51, 4, 1, "", "is_multilingual"], [51, 2, 1, "", "load_model"], [51, 4, 1, "", "model_is_loaded"], [51, 4, 1, "", "n_mels"], [51, 4, 1, "", "num_active_batches"], [51, 4, 1, "", "num_languages"], [51, 4, 1, "", "num_queued_batches"], [51, 4, 1, "", "num_workers"], [51, 4, 1, "", "tensor_parallel"], [51, 2, 1, "", "unload_model"]], "ctranslate2.models.WhisperGenerationResult": [[52, 4, 1, "", "logits"], [52, 4, 1, "", "no_speech_prob"], [52, 4, 1, "", "scores"], [52, 4, 1, "", "sequences"], [52, 4, 1, "", "sequences_ids"]], "ctranslate2.models.WhisperGenerationResultAsync": [[53, 2, 1, "", "done"], [53, 2, 1, "", "result"]], "ctranslate2.specs": [[57, 1, 1, "", "Activation"], [58, 1, 1, "", "EmbeddingsMerge"], [59, 1, 1, "", "LanguageModelSpec"], [60, 1, 1, "", "LayerSpec"], [61, 1, 1, "", "ModelSpec"], [62, 1, 1, "", "RotaryScalingType"], [63, 1, 1, "", "SequenceToSequenceModelSpec"], [64, 1, 1, "", "TransformerDecoderModelSpec"], [65, 1, 1, "", "TransformerDecoderSpec"], [66, 1, 1, "", "TransformerEncoderModelSpec"], [67, 1, 1, "", "TransformerEncoderSpec"], [68, 1, 1, "", "TransformerSpec"], [69, 1, 1, "", "Wav2Vec2BertSpec"], [70, 1, 1, "", "Wav2Vec2Spec"], [71, 1, 1, "", "WhisperSpec"]], "ctranslate2.specs.Activation": [[57, 3, 1, "", "GELU"], [57, 3, 1, "", "GELUSigmoid"], [57, 3, 1, "", "GELUTanh"], [57, 3, 1, "", "RELU"], [57, 3, 1, "", "SWISH"], [57, 3, 1, "", "Sigmoid"], [57, 3, 1, "", "Tanh"]], "ctranslate2.specs.EmbeddingsMerge": [[58, 3, 1, "", "ADD"], [58, 3, 1, "", "CONCAT"]], "ctranslate2.specs.LanguageModelSpec": [[59, 2, 1, "", "__init__"], [59, 4, 1, "", "config"], [59, 2, 1, "", "get_default_config"], [59, 2, 1, "", "get_vocabulary_size"], [59, 4, 1, "", "name"], [59, 2, 1, "", "optimize"], [59, 2, 1, "", "register_file"], [59, 2, 1, "", "register_vocabulary"], [59, 4, 1, "", "revision"], [59, 2, 1, "", "save"], [59, 2, 1, "", "validate"], [59, 2, 1, "", "variables"]], "ctranslate2.specs.LayerSpec": [[60, 2, 1, "", "optimize"], [60, 2, 1, "", "validate"], [60, 2, 1, "", "variables"]], "ctranslate2.specs.ModelSpec": [[61, 2, 1, "", "__init__"], [61, 4, 1, "", "config"], [61, 2, 1, "", "get_default_config"], [61, 4, 1, "", "name"], [61, 2, 1, "", "optimize"], [61, 2, 1, "", "register_file"], [61, 4, 1, "", "revision"], [61, 2, 1, "", "save"], [61, 2, 1, "", "validate"], [61, 2, 1, "", "variables"]], "ctranslate2.specs.RotaryScalingType": [[62, 3, 1, "", "Linear"], [62, 3, 1, "", "Llama3"], [62, 3, 1, "", "Su"]], "ctranslate2.specs.SequenceToSequenceModelSpec": [[63, 2, 1, "", "__init__"], [63, 4, 1, "", "config"], [63, 2, 1, "", "get_default_config"], [63, 2, 1, "", "get_source_vocabulary_size"], [63, 2, 1, "", "get_target_vocabulary_size"], [63, 4, 1, "", "name"], [63, 2, 1, "", "optimize"], [63, 2, 1, "", "register_file"], [63, 2, 1, "", "register_source_vocabulary"], [63, 2, 1, "", "register_target_vocabulary"], [63, 2, 1, "", "register_vocabulary_mapping"], [63, 4, 1, "", "revision"], [63, 2, 1, "", "save"], [63, 2, 1, "", "validate"], [63, 2, 1, "", "variables"]], "ctranslate2.specs.TransformerDecoderModelSpec": [[64, 2, 1, "", "__init__"], [64, 4, 1, "", "config"], [64, 2, 1, "", "from_config"], [64, 2, 1, "", "get_default_config"], [64, 2, 1, "", "get_vocabulary_size"], [64, 4, 1, "", "name"], [64, 2, 1, "", "optimize"], [64, 2, 1, "", "register_file"], [64, 2, 1, "", "register_vocabulary"], [64, 4, 1, "", "revision"], [64, 2, 1, "", "save"], [64, 2, 1, "", "validate"], [64, 2, 1, "", "variables"]], "ctranslate2.specs.TransformerDecoderSpec": [[65, 2, 1, "", "__init__"], [65, 4, 1, "", "config"], [65, 2, 1, "", "optimize"], [65, 2, 1, "", "validate"], [65, 2, 1, "", "variables"]], "ctranslate2.specs.TransformerEncoderModelSpec": [[66, 2, 1, "", "__init__"], [66, 4, 1, "", "config"], [66, 2, 1, "", "get_default_config"], [66, 2, 1, "", "get_vocabulary_size"], [66, 4, 1, "", "name"], [66, 2, 1, "", "optimize"], [66, 2, 1, "", "register_file"], [66, 2, 1, "", "register_vocabulary"], [66, 4, 1, "", "revision"], [66, 2, 1, "", "save"], [66, 2, 1, "", "validate"], [66, 2, 1, "", "variables"]], "ctranslate2.specs.TransformerEncoderSpec": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "optimize"], [67, 2, 1, "", "validate"], [67, 2, 1, "", "variables"]], "ctranslate2.specs.TransformerSpec": [[68, 2, 1, "", "__init__"], [68, 4, 1, "", "config"], [68, 2, 1, "", "from_config"], [68, 2, 1, "", "get_default_config"], [68, 2, 1, "", "get_source_vocabulary_size"], [68, 2, 1, "", "get_target_vocabulary_size"], [68, 4, 1, "", "name"], [68, 2, 1, "", "optimize"], [68, 2, 1, "", "register_file"], [68, 2, 1, "", "register_source_vocabulary"], [68, 2, 1, "", "register_target_vocabulary"], [68, 2, 1, "", "register_vocabulary_mapping"], [68, 4, 1, "", "revision"], [68, 2, 1, "", "save"], [68, 2, 1, "", "validate"], [68, 2, 1, "", "variables"]], "ctranslate2.specs.Wav2Vec2BertSpec": [[69, 2, 1, "", "__init__"], [69, 4, 1, "", "config"], [69, 2, 1, "", "get_default_config"], [69, 2, 1, "", "get_vocabulary_size"], [69, 4, 1, "", "name"], [69, 2, 1, "", "optimize"], [69, 2, 1, "", "register_file"], [69, 2, 1, "", "register_vocabulary"], [69, 4, 1, "", "revision"], [69, 2, 1, "", "save"], [69, 2, 1, "", "validate"], [69, 2, 1, "", "variables"]], "ctranslate2.specs.Wav2Vec2Spec": [[70, 2, 1, "", "__init__"], [70, 4, 1, "", "config"], [70, 2, 1, "", "get_default_config"], [70, 2, 1, "", "get_vocabulary_size"], [70, 4, 1, "", "name"], [70, 2, 1, "", "optimize"], [70, 2, 1, "", "register_file"], [70, 2, 1, "", "register_vocabulary"], [70, 4, 1, "", "revision"], [70, 2, 1, "", "save"], [70, 2, 1, "", "validate"], [70, 2, 1, "", "variables"]], "ctranslate2.specs.WhisperSpec": [[71, 2, 1, "", "__init__"], [71, 4, 1, "", "config"], [71, 2, 1, "", "get_default_config"], [71, 2, 1, "", "get_vocabulary_size"], [71, 4, 1, "", "name"], [71, 2, 1, "", "optimize"], [71, 2, 1, "", "register_file"], [71, 2, 1, "", "register_vocabulary"], [71, 4, 1, "", "revision"], [71, 2, 1, "", "save"], [71, 2, 1, "", "validate"], [71, 2, 1, "", "variables"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"model": [0, 6, 16, 48, 73], "convers": [0, 73], "support": [0, 12, 14, 73], "framework": [0, 13], "structur": 0, "quantiz": [0, 73], "reduc": 0, "precis": 0, "backward": 0, "compat": 0, "portabl": 0, "add": 0, "new": 0, "convert": [0, 36, 37], "specif": 0, "serial": 0, "decod": 1, "featur": 1, "greedi": 1, "search": [1, 6], "beam": [1, 6], "length": 1, "constraint": 1, "autocomplet": 1, "bias": 1, "altern": 1, "posit": 1, "random": 1, "sampl": 1, "text": [2, 5, 8, 76], "encod": [2, 24], "environ": 3, "variabl": 3, "ct2_cuda_alloc": 3, "ct2_cuda_allow_bf16": 3, "ct2_cuda_allow_fp16": 3, "ct2_cuda_true_fp16_gemm": 3, "ct2_cuda_caching_allocator_config": 3, "ct2_force_cpu_isa": 3, "ct2_use_experimental_packed_gemm": 3, "ct2_use_mkl": 3, "ct2_verbos": 3, "frequent": 4, "ask": 4, "question": 4, "how": 4, "doe": 4, "relat": 4, "origin": 4, "ctranslat": 4, "project": 4, "why": 4, "when": 4, "should": 4, "i": 4, "us": 4, "thi": 4, "implement": 4, "instead": 4, "pytorch": 4, "tensorflow": 4, "what": 4, "ar": 4, "known": 4, "limit": 4, "futur": 4, "plan": 4, "do": 4, "you": 4, "provid": 4, "translat": [4, 11, 17, 34, 76], "server": 4, "gener": [5, 8, 17, 29], "token": [5, 11], "stream": 5, "prompt": 5, "cach": 5, "special": [5, 11], "fairseq": 6, "equival": 6, "wmt16": 6, "english": 6, "german": 6, "wmt19": 6, "languag": 6, "m2m": [6, 11], "100": [6, 11], "mbart": 6, "50": 6, "marian": 7, "opennmt": [8, 9], "py": 8, "transformer_lm": 8, "tf": 9, "opu": 10, "mt": 10, "exampl": [10, 76], "transform": 11, "bart": 11, "bert": 11, "bloom": 11, "distilbert": 11, "falcon": 11, "llama": 11, "2": 11, "marianmt": 11, "mpt": 11, "nllb": 11, "gpt": 11, "gptbigcod": 11, "j": 11, "neox": 11, "opt": 11, "t5": 11, "whisper": [11, 51], "hardwar": 12, "cpu": [12, 16, 17], "gpu": [12, 14, 17], "index": 13, "get": 13, "start": 13, "task": 13, "develop": 13, "guid": 13, "api": 13, "other": 13, "inform": 13, "instal": 14, "pip": 14, "docker": 14, "from": [14, 15], "sourc": [14, 76], "download": 14, "code": 14, "compil": 14, "c": [14, 74, 76], "librari": 14, "python": [14, 15, 72, 74, 76], "wrapper": 14, "build": 14, "option": 14, "memori": 15, "manag": 15, "multithread": 16, "parallel": 16, "intra": 16, "op": 16, "data": 16, "tensor": 16, "asynchron": 16, "execut": 16, "perform": 17, "tip": 17, "ctranslate2": [18, 36, 48, 56], "asyncgenerationresult": 19, "asyncscoringresult": 20, "asynctranslationresult": 21, "datatyp": 22, "devic": 23, "encoderforwardoutput": 25, "executionstat": 26, "generationresult": 27, "generationstepresult": 28, "mpiinfo": 30, "scoringresult": 31, "storageview": 32, "translationresult": 33, "contains_model": 35, "fairseqconvert": 38, "marianconvert": 39, "openaigpt2convert": 40, "opennmtpyconvert": 41, "opennmttfconvert": 42, "opusmtconvert": 43, "transformersconvert": 44, "get_cuda_device_count": 45, "get_log_level": 46, "get_supported_compute_typ": 47, "wav2vec2": 49, "wav2vec2bert": 50, "whispergenerationresult": 52, "whispergenerationresultasync": 53, "set_log_level": 54, "set_random_se": 55, "spec": 56, "activ": 57, "embeddingsmerg": 58, "languagemodelspec": 59, "layerspec": 60, "modelspec": 61, "rotaryscalingtyp": 62, "sequencetosequencemodelspec": 63, "transformerdecodermodelspec": 64, "transformerdecoderspec": 65, "transformerencodermodelspec": 66, "transformerencoderspec": 67, "transformerspec": 68, "wav2vec2bertspec": 69, "wav2vec2spec": 70, "whisperspec": 71, "load": 73, "implicit": 73, "type": 73, "8": 73, "bit": 73, "integ": 73, "int8": 73, "16": 73, "int16": 73, "float": 73, "point": 73, "float16": 73, "brain": 73, "bfloat16": 73, "4": 73, "awq": 73, "quickstart": 74, "speech": 75, "recognit": 75, "client": 76, "factor": 76, "dynam": 76, "vocabulari": 76, "reduct": 76, "version": 77}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Model conversion": [[0, "model-conversion"]], "Supported frameworks": [[0, "supported-frameworks"]], "Model structure": [[0, "model-structure"]], "Quantization and reduced precision": [[0, "quantization-and-reduced-precision"]], "Backward compatibility": [[0, "backward-compatibility"]], "Portability": [[0, "portability"]], "Add a new converter": [[0, "add-a-new-converter"]], "Model specification": [[0, "model-specification"]], "Model serialization": [[0, "model-serialization"]], "Decoding features": [[1, "decoding-features"]], "Greedy search": [[1, "greedy-search"]], "Beam search": [[1, "beam-search"]], "Length constraints": [[1, "length-constraints"]], "Autocompletion": [[1, "autocompletion"]], "Biased decoding": [[1, "biased-decoding"]], "Alternatives at a position": [[1, "alternatives-at-a-position"]], "Random sampling": [[1, "random-sampling"]], "Text encoding": [[2, "text-encoding"]], "Environment variables": [[3, "environment-variables"]], "CT2_CUDA_ALLOCATOR": [[3, "ct2-cuda-allocator"]], "CT2_CUDA_ALLOW_BF16": [[3, "ct2-cuda-allow-bf16"]], "CT2_CUDA_ALLOW_FP16": [[3, "ct2-cuda-allow-fp16"]], "CT2_CUDA_TRUE_FP16_GEMM": [[3, "ct2-cuda-true-fp16-gemm"]], "CT2_CUDA_CACHING_ALLOCATOR_CONFIG": [[3, "ct2-cuda-caching-allocator-config"]], "CT2_FORCE_CPU_ISA": [[3, "ct2-force-cpu-isa"]], "CT2_USE_EXPERIMENTAL_PACKED_GEMM": [[3, "ct2-use-experimental-packed-gemm"]], "CT2_USE_MKL": [[3, "ct2-use-mkl"]], "CT2_VERBOSE": [[3, "ct2-verbose"]], "Frequently asked questions": [[4, "frequently-asked-questions"]], "How does it relate to the original CTranslate project?": [[4, "how-does-it-relate-to-the-original-ctranslate-project"]], "Why and when should I use this implementation instead of PyTorch or TensorFlow?": [[4, "why-and-when-should-i-use-this-implementation-instead-of-pytorch-or-tensorflow"]], "What are the known limitations?": [[4, "what-are-the-known-limitations"]], "What are the future plans?": [[4, "what-are-the-future-plans"]], "Do you provide a translation server?": [[4, "do-you-provide-a-translation-server"]], "Text generation": [[5, "text-generation"]], "Token streaming": [[5, "token-streaming"]], "Prompt caching": [[5, "prompt-caching"]], "Special tokens": [[5, "special-tokens"]], "Fairseq": [[6, "fairseq"]], "Beam search equivalence": [[6, "beam-search-equivalence"]], "WMT16 English-German": [[6, "wmt16-english-german"]], "WMT19 language model": [[6, "wmt19-language-model"]], "M2M-100": [[6, "m2m-100"], [11, "m2m-100"]], "MBART-50": [[6, "mbart-50"]], "Marian": [[7, "marian"]], "OpenNMT-py": [[8, "opennmt-py"]], "Text generation with transformer_lm": [[8, "text-generation-with-transformer-lm"]], "OpenNMT-tf": [[9, "opennmt-tf"]], "OPUS-MT": [[10, "opus-mt"]], "Example": [[10, "example"]], "Transformers": [[11, "transformers"]], "Special tokens in translation": [[11, "special-tokens-in-translation"]], "BART": [[11, "bart"]], "BERT": [[11, "bert"]], "BLOOM": [[11, "bloom"]], "DistilBERT": [[11, "distilbert"]], "Falcon": [[11, "falcon"]], "Llama 2": [[11, "llama-2"]], "MarianMT": [[11, "marianmt"]], "MPT": [[11, "mpt"]], "NLLB": [[11, "nllb"]], "GPT-2": [[11, "gpt-2"]], "GPTBigCode": [[11, "gptbigcode"]], "GPT-J": [[11, "gpt-j"]], "GPT-NeoX": [[11, "gpt-neox"]], "OPT": [[11, "opt"]], "T5": [[11, "t5"]], "Whisper": [[11, "whisper"], [51, "whisper"]], "Hardware support": [[12, "hardware-support"]], "CPU": [[12, "cpu"], [17, "cpu"]], "GPU": [[12, "gpu"], [17, "gpu"]], "Index": [[13, "index"]], "Get started": [[13, null]], "Tasks": [[13, null]], "Developer guides": [[13, null]], "Framework guides": [[13, null]], "API": [[13, null]], "Other information": [[13, null]], "Installation": [[14, "installation"]], "Install with pip": [[14, "install-with-pip"]], "GPU support": [[14, null], [14, null]], "Install with Docker": [[14, "install-with-docker"]], "Install from sources": [[14, "install-from-sources"]], "Download the source code": [[14, "download-the-source-code"]], "Compile the C++ library": [[14, "compile-the-c-library"]], "Compile the Python wrapper": [[14, "compile-the-python-wrapper"]], "Build options": [[14, "build-options"]], "Memory management": [[15, "memory-management"]], "From Python": [[15, "from-python"]], "Multithreading and parallelism": [[16, "multithreading-and-parallelism"]], "Intra-op multithreading on CPU": [[16, "intra-op-multithreading-on-cpu"]], "Data parallelism": [[16, "data-parallelism"]], "Model and tensor parallelism": [[16, "model-and-tensor-parallelism"]], "Asynchronous execution": [[16, "asynchronous-execution"]], "Performance tips": [[17, "performance-tips"]], "Translator": [[17, "translator"], [34, "translator"]], "Generator": [[17, "generator"], [29, "generator"]], "ctranslate2": [[18, "module-ctranslate2"]], "AsyncGenerationResult": [[19, "asyncgenerationresult"]], "AsyncScoringResult": [[20, "asyncscoringresult"]], "AsyncTranslationResult": [[21, "asynctranslationresult"]], "DataType": [[22, "datatype"]], "Device": [[23, "device"]], "Encoder": [[24, "encoder"]], "EncoderForwardOutput": [[25, "encoderforwardoutput"]], "ExecutionStats": [[26, "executionstats"]], "GenerationResult": [[27, "generationresult"]], "GenerationStepResult": [[28, "generationstepresult"]], "MpiInfo": [[30, "mpiinfo"]], "ScoringResult": [[31, "scoringresult"]], "StorageView": [[32, "storageview"]], "TranslationResult": [[33, "translationresult"]], "contains_model": [[35, "contains-model"]], "ctranslate2.converters": [[36, "module-ctranslate2.converters"]], "Converter": [[37, "converter"]], "FairseqConverter": [[38, "fairseqconverter"]], "MarianConverter": [[39, "marianconverter"]], "OpenAIGPT2Converter": [[40, "openaigpt2converter"]], "OpenNMTPyConverter": [[41, "opennmtpyconverter"]], "OpenNMTTFConverter": [[42, "opennmttfconverter"]], "OpusMTConverter": [[43, "opusmtconverter"]], "TransformersConverter": [[44, "transformersconverter"]], "get_cuda_device_count": [[45, "get-cuda-device-count"]], "get_log_level": [[46, "get-log-level"]], "get_supported_compute_types": [[47, "get-supported-compute-types"]], "ctranslate2.models": [[48, "module-ctranslate2.models"]], "Wav2Vec2": [[49, "wav2vec2"]], "Wav2Vec2Bert": [[50, "wav2vec2bert"]], "WhisperGenerationResult": [[52, "whispergenerationresult"]], "WhisperGenerationResultAsync": [[53, "whispergenerationresultasync"]], "set_log_level": [[54, "set-log-level"]], "set_random_seed": [[55, "set-random-seed"]], "ctranslate2.specs": [[56, "module-ctranslate2.specs"]], "Activation": [[57, "activation"]], "EmbeddingsMerge": [[58, "embeddingsmerge"]], "LanguageModelSpec": [[59, "languagemodelspec"]], "LayerSpec": [[60, "layerspec"]], "ModelSpec": [[61, "modelspec"]], "RotaryScalingType": [[62, "rotaryscalingtype"]], "SequenceToSequenceModelSpec": [[63, "sequencetosequencemodelspec"]], "TransformerDecoderModelSpec": [[64, "transformerdecodermodelspec"]], "TransformerDecoderSpec": [[65, "transformerdecoderspec"]], "TransformerEncoderModelSpec": [[66, "transformerencodermodelspec"]], "TransformerEncoderSpec": [[67, "transformerencoderspec"]], "TransformerSpec": [[68, "transformerspec"]], "Wav2Vec2BertSpec": [[69, "wav2vec2bertspec"]], "Wav2Vec2Spec": [[70, "wav2vec2spec"]], "WhisperSpec": [[71, "whisperspec"]], "Python": [[72, "python"], [74, "python"], [76, "python"]], "Quantization": [[73, "quantization"]], "Quantize on model conversion": [[73, "quantize-on-model-conversion"]], "Quantize on model loading": [[73, "quantize-on-model-loading"]], "Implicit type conversion on load": [[73, "implicit-type-conversion-on-load"]], "Supported types": [[73, "supported-types"]], "8-bit integers (int8)": [[73, "bit-integers-int8"]], "16-bit integers (int16)": [[73, "bit-integers-int16"]], "16-bit floating points (float16)": [[73, "bit-floating-points-float16"]], "16-bit brain floating points (bfloat16)": [[73, "bit-brain-floating-points-bfloat16"]], "4-bit AWQ": [[73, "bit-awq"]], "Quickstart": [[74, "quickstart"]], "C++": [[74, "c"], [76, "c"]], "Speech recognition": [[75, "speech-recognition"]], "Text translation": [[76, "text-translation"]], "Examples": [[76, "examples"]], "Translation client": [[76, "translation-client"]], "Source factors": [[76, "source-factors"]], "Dynamic vocabulary reduction": [[76, "dynamic-vocabulary-reduction"]], "Versioning": [[77, "versioning"]]}, "indexentries": {"ctranslate2": [[18, "module-ctranslate2"]], "module": [[18, "module-ctranslate2"], [36, "module-ctranslate2.converters"], [48, "module-ctranslate2.models"], [56, "module-ctranslate2.specs"]], "asyncgenerationresult (class in ctranslate2)": [[19, "ctranslate2.AsyncGenerationResult"]], "done() (ctranslate2.asyncgenerationresult method)": [[19, "ctranslate2.AsyncGenerationResult.done"]], "result() (ctranslate2.asyncgenerationresult method)": [[19, "ctranslate2.AsyncGenerationResult.result"]], "asyncscoringresult (class in ctranslate2)": [[20, "ctranslate2.AsyncScoringResult"]], "done() (ctranslate2.asyncscoringresult method)": [[20, "ctranslate2.AsyncScoringResult.done"]], "result() (ctranslate2.asyncscoringresult method)": [[20, "ctranslate2.AsyncScoringResult.result"]], "asynctranslationresult (class in ctranslate2)": [[21, "ctranslate2.AsyncTranslationResult"]], "done() (ctranslate2.asynctranslationresult method)": [[21, "ctranslate2.AsyncTranslationResult.done"]], "result() (ctranslate2.asynctranslationresult method)": [[21, "ctranslate2.AsyncTranslationResult.result"]], "datatype (class in ctranslate2)": [[22, "ctranslate2.DataType"]], "__init__() (ctranslate2.datatype method)": [[22, "ctranslate2.DataType.__init__"]], "bfloat16 (ctranslate2.datatype attribute)": [[22, "ctranslate2.DataType.bfloat16"]], "float16 (ctranslate2.datatype attribute)": [[22, "ctranslate2.DataType.float16"]], "float32 (ctranslate2.datatype attribute)": [[22, "ctranslate2.DataType.float32"]], "int16 (ctranslate2.datatype attribute)": [[22, "ctranslate2.DataType.int16"]], "int32 (ctranslate2.datatype attribute)": [[22, "ctranslate2.DataType.int32"]], "int8 (ctranslate2.datatype attribute)": [[22, "ctranslate2.DataType.int8"]], "name (ctranslate2.datatype property)": [[22, "ctranslate2.DataType.name"]], "value (ctranslate2.datatype property)": [[22, "ctranslate2.DataType.value"]], "device (class in ctranslate2)": [[23, "ctranslate2.Device"]], "__init__() (ctranslate2.device method)": [[23, "ctranslate2.Device.__init__"]], "cpu (ctranslate2.device attribute)": [[23, "ctranslate2.Device.cpu"]], "cuda (ctranslate2.device attribute)": [[23, "ctranslate2.Device.cuda"]], "name (ctranslate2.device property)": [[23, "ctranslate2.Device.name"]], "value (ctranslate2.device property)": [[23, "ctranslate2.Device.value"]], "encoder (class in ctranslate2)": [[24, "ctranslate2.Encoder"]], "__init__() (ctranslate2.encoder method)": [[24, "ctranslate2.Encoder.__init__"]], "compute_type (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.compute_type"]], "device (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.device"]], "device_index (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.device_index"]], "forward_batch() (ctranslate2.encoder method)": [[24, "ctranslate2.Encoder.forward_batch"]], "load_model() (ctranslate2.encoder method)": [[24, "ctranslate2.Encoder.load_model"]], "model_is_loaded (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.model_is_loaded"]], "num_active_batches (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.num_active_batches"]], "num_encoders (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.num_encoders"]], "num_queued_batches (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.num_queued_batches"]], "tensor_parallel (ctranslate2.encoder property)": [[24, "ctranslate2.Encoder.tensor_parallel"]], "unload_model() (ctranslate2.encoder method)": [[24, "ctranslate2.Encoder.unload_model"]], "encoderforwardoutput (class in ctranslate2)": [[25, "ctranslate2.EncoderForwardOutput"]], "last_hidden_state (ctranslate2.encoderforwardoutput property)": [[25, "ctranslate2.EncoderForwardOutput.last_hidden_state"]], "pooler_output (ctranslate2.encoderforwardoutput property)": [[25, "ctranslate2.EncoderForwardOutput.pooler_output"]], "executionstats (class in ctranslate2)": [[26, "ctranslate2.ExecutionStats"]], "num_examples (ctranslate2.executionstats property)": [[26, "ctranslate2.ExecutionStats.num_examples"]], "num_tokens (ctranslate2.executionstats property)": [[26, "ctranslate2.ExecutionStats.num_tokens"]], "total_time_in_ms (ctranslate2.executionstats property)": [[26, "ctranslate2.ExecutionStats.total_time_in_ms"]], "generationresult (class in ctranslate2)": [[27, "ctranslate2.GenerationResult"]], "logits (ctranslate2.generationresult property)": [[27, "ctranslate2.GenerationResult.logits"]], "scores (ctranslate2.generationresult property)": [[27, "ctranslate2.GenerationResult.scores"]], "sequences (ctranslate2.generationresult property)": [[27, "ctranslate2.GenerationResult.sequences"]], "sequences_ids (ctranslate2.generationresult property)": [[27, "ctranslate2.GenerationResult.sequences_ids"]], "generationstepresult (class in ctranslate2)": [[28, "ctranslate2.GenerationStepResult"]], "batch_id (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.batch_id"]], "hypothesis_id (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.hypothesis_id"]], "is_last (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.is_last"]], "log_prob (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.log_prob"]], "logits (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.logits"]], "step (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.step"]], "token (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.token"]], "token_id (ctranslate2.generationstepresult property)": [[28, "ctranslate2.GenerationStepResult.token_id"]], "generator (class in ctranslate2)": [[29, "ctranslate2.Generator"]], "__init__() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.__init__"]], "async_generate_tokens() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.async_generate_tokens"]], "compute_type (ctranslate2.generator property)": [[29, "ctranslate2.Generator.compute_type"]], "device (ctranslate2.generator property)": [[29, "ctranslate2.Generator.device"]], "device_index (ctranslate2.generator property)": [[29, "ctranslate2.Generator.device_index"]], "forward_batch() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.forward_batch"]], "generate_batch() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.generate_batch"]], "generate_iterable() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.generate_iterable"]], "generate_tokens() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.generate_tokens"]], "load_model() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.load_model"]], "model_is_loaded (ctranslate2.generator property)": [[29, "ctranslate2.Generator.model_is_loaded"]], "num_active_batches (ctranslate2.generator property)": [[29, "ctranslate2.Generator.num_active_batches"]], "num_generators (ctranslate2.generator property)": [[29, "ctranslate2.Generator.num_generators"]], "num_queued_batches (ctranslate2.generator property)": [[29, "ctranslate2.Generator.num_queued_batches"]], "score_batch() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.score_batch"]], "score_iterable() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.score_iterable"]], "tensor_parallel (ctranslate2.generator property)": [[29, "ctranslate2.Generator.tensor_parallel"]], "unload_model() (ctranslate2.generator method)": [[29, "ctranslate2.Generator.unload_model"]], "mpiinfo (class in ctranslate2)": [[30, "ctranslate2.MpiInfo"]], "getcurrank() (ctranslate2.mpiinfo static method)": [[30, "ctranslate2.MpiInfo.getCurRank"]], "getlocalrank() (ctranslate2.mpiinfo static method)": [[30, "ctranslate2.MpiInfo.getLocalRank"]], "getnranks() (ctranslate2.mpiinfo static method)": [[30, "ctranslate2.MpiInfo.getNRanks"]], "scoringresult (class in ctranslate2)": [[31, "ctranslate2.ScoringResult"]], "log_probs (ctranslate2.scoringresult property)": [[31, "ctranslate2.ScoringResult.log_probs"]], "tokens (ctranslate2.scoringresult property)": [[31, "ctranslate2.ScoringResult.tokens"]], "storageview (class in ctranslate2)": [[32, "ctranslate2.StorageView"]], "device (ctranslate2.storageview property)": [[32, "ctranslate2.StorageView.device"]], "device_index (ctranslate2.storageview property)": [[32, "ctranslate2.StorageView.device_index"]], "dtype (ctranslate2.storageview property)": [[32, "ctranslate2.StorageView.dtype"]], "from_array() (ctranslate2.storageview static method)": [[32, "ctranslate2.StorageView.from_array"]], "shape (ctranslate2.storageview property)": [[32, "ctranslate2.StorageView.shape"]], "to() (ctranslate2.storageview method)": [[32, "ctranslate2.StorageView.to"]], "to_device() (ctranslate2.storageview method)": [[32, "ctranslate2.StorageView.to_device"]], "translationresult (class in ctranslate2)": [[33, "ctranslate2.TranslationResult"]], "attention (ctranslate2.translationresult property)": [[33, "ctranslate2.TranslationResult.attention"]], "hypotheses (ctranslate2.translationresult property)": [[33, "ctranslate2.TranslationResult.hypotheses"]], "logits (ctranslate2.translationresult property)": [[33, "ctranslate2.TranslationResult.logits"]], "scores (ctranslate2.translationresult property)": [[33, "ctranslate2.TranslationResult.scores"]], "translator (class in ctranslate2)": [[34, "ctranslate2.Translator"]], "__init__() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.__init__"]], "compute_type (ctranslate2.translator property)": [[34, "ctranslate2.Translator.compute_type"]], "device (ctranslate2.translator property)": [[34, "ctranslate2.Translator.device"]], "device_index (ctranslate2.translator property)": [[34, "ctranslate2.Translator.device_index"]], "generate_tokens() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.generate_tokens"]], "load_model() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.load_model"]], "model_is_loaded (ctranslate2.translator property)": [[34, "ctranslate2.Translator.model_is_loaded"]], "num_active_batches (ctranslate2.translator property)": [[34, "ctranslate2.Translator.num_active_batches"]], "num_queued_batches (ctranslate2.translator property)": [[34, "ctranslate2.Translator.num_queued_batches"]], "num_translators (ctranslate2.translator property)": [[34, "ctranslate2.Translator.num_translators"]], "score_batch() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.score_batch"]], "score_file() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.score_file"]], "score_iterable() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.score_iterable"]], "tensor_parallel (ctranslate2.translator property)": [[34, "ctranslate2.Translator.tensor_parallel"]], "translate_batch() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.translate_batch"]], "translate_file() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.translate_file"]], "translate_iterable() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.translate_iterable"]], "unload_model() (ctranslate2.translator method)": [[34, "ctranslate2.Translator.unload_model"]], "contains_model() (in module ctranslate2)": [[35, "ctranslate2.contains_model"]], "ctranslate2.converters": [[36, "module-ctranslate2.converters"]], "converter (class in ctranslate2.converters)": [[37, "ctranslate2.converters.Converter"]], "convert() (ctranslate2.converters.converter method)": [[37, "ctranslate2.converters.Converter.convert"]], "convert_from_args() (ctranslate2.converters.converter method)": [[37, "ctranslate2.converters.Converter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.converter static method)": [[37, "ctranslate2.converters.Converter.declare_arguments"]], "fairseqconverter (class in ctranslate2.converters)": [[38, "ctranslate2.converters.FairseqConverter"]], "__init__() (ctranslate2.converters.fairseqconverter method)": [[38, "ctranslate2.converters.FairseqConverter.__init__"]], "convert() (ctranslate2.converters.fairseqconverter method)": [[38, "ctranslate2.converters.FairseqConverter.convert"]], "convert_from_args() (ctranslate2.converters.fairseqconverter method)": [[38, "ctranslate2.converters.FairseqConverter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.fairseqconverter static method)": [[38, "ctranslate2.converters.FairseqConverter.declare_arguments"]], "marianconverter (class in ctranslate2.converters)": [[39, "ctranslate2.converters.MarianConverter"]], "__init__() (ctranslate2.converters.marianconverter method)": [[39, "ctranslate2.converters.MarianConverter.__init__"]], "convert() (ctranslate2.converters.marianconverter method)": [[39, "ctranslate2.converters.MarianConverter.convert"]], "convert_from_args() (ctranslate2.converters.marianconverter method)": [[39, "ctranslate2.converters.MarianConverter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.marianconverter static method)": [[39, "ctranslate2.converters.MarianConverter.declare_arguments"]], "openaigpt2converter (class in ctranslate2.converters)": [[40, "ctranslate2.converters.OpenAIGPT2Converter"]], "__init__() (ctranslate2.converters.openaigpt2converter method)": [[40, "ctranslate2.converters.OpenAIGPT2Converter.__init__"]], "convert() (ctranslate2.converters.openaigpt2converter method)": [[40, "ctranslate2.converters.OpenAIGPT2Converter.convert"]], "convert_from_args() (ctranslate2.converters.openaigpt2converter method)": [[40, "ctranslate2.converters.OpenAIGPT2Converter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.openaigpt2converter static method)": [[40, "ctranslate2.converters.OpenAIGPT2Converter.declare_arguments"]], "opennmtpyconverter (class in ctranslate2.converters)": [[41, "ctranslate2.converters.OpenNMTPyConverter"]], "__init__() (ctranslate2.converters.opennmtpyconverter method)": [[41, "ctranslate2.converters.OpenNMTPyConverter.__init__"]], "convert() (ctranslate2.converters.opennmtpyconverter method)": [[41, "ctranslate2.converters.OpenNMTPyConverter.convert"]], "convert_from_args() (ctranslate2.converters.opennmtpyconverter method)": [[41, "ctranslate2.converters.OpenNMTPyConverter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.opennmtpyconverter static method)": [[41, "ctranslate2.converters.OpenNMTPyConverter.declare_arguments"]], "opennmttfconverter (class in ctranslate2.converters)": [[42, "ctranslate2.converters.OpenNMTTFConverter"]], "__init__() (ctranslate2.converters.opennmttfconverter method)": [[42, "ctranslate2.converters.OpenNMTTFConverter.__init__"]], "convert() (ctranslate2.converters.opennmttfconverter method)": [[42, "ctranslate2.converters.OpenNMTTFConverter.convert"]], "convert_from_args() (ctranslate2.converters.opennmttfconverter method)": [[42, "ctranslate2.converters.OpenNMTTFConverter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.opennmttfconverter static method)": [[42, "ctranslate2.converters.OpenNMTTFConverter.declare_arguments"]], "from_config() (ctranslate2.converters.opennmttfconverter class method)": [[42, "ctranslate2.converters.OpenNMTTFConverter.from_config"]], "opusmtconverter (class in ctranslate2.converters)": [[43, "ctranslate2.converters.OpusMTConverter"]], "__init__() (ctranslate2.converters.opusmtconverter method)": [[43, "ctranslate2.converters.OpusMTConverter.__init__"]], "convert() (ctranslate2.converters.opusmtconverter method)": [[43, "ctranslate2.converters.OpusMTConverter.convert"]], "convert_from_args() (ctranslate2.converters.opusmtconverter method)": [[43, "ctranslate2.converters.OpusMTConverter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.opusmtconverter static method)": [[43, "ctranslate2.converters.OpusMTConverter.declare_arguments"]], "transformersconverter (class in ctranslate2.converters)": [[44, "ctranslate2.converters.TransformersConverter"]], "__init__() (ctranslate2.converters.transformersconverter method)": [[44, "ctranslate2.converters.TransformersConverter.__init__"]], "convert() (ctranslate2.converters.transformersconverter method)": [[44, "ctranslate2.converters.TransformersConverter.convert"]], "convert_from_args() (ctranslate2.converters.transformersconverter method)": [[44, "ctranslate2.converters.TransformersConverter.convert_from_args"]], "declare_arguments() (ctranslate2.converters.transformersconverter static method)": [[44, "ctranslate2.converters.TransformersConverter.declare_arguments"]], "get_model_file() (ctranslate2.converters.transformersconverter method)": [[44, "ctranslate2.converters.TransformersConverter.get_model_file"]], "load_model() (ctranslate2.converters.transformersconverter method)": [[44, "ctranslate2.converters.TransformersConverter.load_model"]], "load_tokenizer() (ctranslate2.converters.transformersconverter method)": [[44, "ctranslate2.converters.TransformersConverter.load_tokenizer"]], "get_cuda_device_count() (in module ctranslate2)": [[45, "ctranslate2.get_cuda_device_count"]], "get_log_level() (in module ctranslate2)": [[46, "ctranslate2.get_log_level"]], "get_supported_compute_types() (in module ctranslate2)": [[47, "ctranslate2.get_supported_compute_types"]], "ctranslate2.models": [[48, "module-ctranslate2.models"]], "wav2vec2 (class in ctranslate2.models)": [[49, "ctranslate2.models.Wav2Vec2"]], "__init__() (ctranslate2.models.wav2vec2 method)": [[49, "ctranslate2.models.Wav2Vec2.__init__"]], "compute_type (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.compute_type"]], "device (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.device"]], "device_index (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.device_index"]], "encode() (ctranslate2.models.wav2vec2 method)": [[49, "ctranslate2.models.Wav2Vec2.encode"]], "load_model() (ctranslate2.models.wav2vec2 method)": [[49, "ctranslate2.models.Wav2Vec2.load_model"]], "model_is_loaded (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.model_is_loaded"]], "num_active_batches (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.num_active_batches"]], "num_queued_batches (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.num_queued_batches"]], "num_workers (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.num_workers"]], "tensor_parallel (ctranslate2.models.wav2vec2 property)": [[49, "ctranslate2.models.Wav2Vec2.tensor_parallel"]], "unload_model() (ctranslate2.models.wav2vec2 method)": [[49, "ctranslate2.models.Wav2Vec2.unload_model"]], "wav2vec2bert (class in ctranslate2.models)": [[50, "ctranslate2.models.Wav2Vec2Bert"]], "__init__() (ctranslate2.models.wav2vec2bert method)": [[50, "ctranslate2.models.Wav2Vec2Bert.__init__"]], "compute_type (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.compute_type"]], "device (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.device"]], "device_index (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.device_index"]], "encode() (ctranslate2.models.wav2vec2bert method)": [[50, "ctranslate2.models.Wav2Vec2Bert.encode"]], "load_model() (ctranslate2.models.wav2vec2bert method)": [[50, "ctranslate2.models.Wav2Vec2Bert.load_model"]], "model_is_loaded (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.model_is_loaded"]], "num_active_batches (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.num_active_batches"]], "num_queued_batches (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.num_queued_batches"]], "num_workers (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.num_workers"]], "tensor_parallel (ctranslate2.models.wav2vec2bert property)": [[50, "ctranslate2.models.Wav2Vec2Bert.tensor_parallel"]], "unload_model() (ctranslate2.models.wav2vec2bert method)": [[50, "ctranslate2.models.Wav2Vec2Bert.unload_model"]], "whisper (class in ctranslate2.models)": [[51, "ctranslate2.models.Whisper"]], "__init__() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.__init__"]], "align() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.align"]], "compute_type (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.compute_type"]], "detect_language() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.detect_language"]], "device (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.device"]], "device_index (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.device_index"]], "encode() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.encode"]], "generate() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.generate"]], "is_multilingual (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.is_multilingual"]], "load_model() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.load_model"]], "model_is_loaded (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.model_is_loaded"]], "n_mels (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.n_mels"]], "num_active_batches (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.num_active_batches"]], "num_languages (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.num_languages"]], "num_queued_batches (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.num_queued_batches"]], "num_workers (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.num_workers"]], "tensor_parallel (ctranslate2.models.whisper property)": [[51, "ctranslate2.models.Whisper.tensor_parallel"]], "unload_model() (ctranslate2.models.whisper method)": [[51, "ctranslate2.models.Whisper.unload_model"]], "whispergenerationresult (class in ctranslate2.models)": [[52, "ctranslate2.models.WhisperGenerationResult"]], "logits (ctranslate2.models.whispergenerationresult property)": [[52, "ctranslate2.models.WhisperGenerationResult.logits"]], "no_speech_prob (ctranslate2.models.whispergenerationresult property)": [[52, "ctranslate2.models.WhisperGenerationResult.no_speech_prob"]], "scores (ctranslate2.models.whispergenerationresult property)": [[52, "ctranslate2.models.WhisperGenerationResult.scores"]], "sequences (ctranslate2.models.whispergenerationresult property)": [[52, "ctranslate2.models.WhisperGenerationResult.sequences"]], "sequences_ids (ctranslate2.models.whispergenerationresult property)": [[52, "ctranslate2.models.WhisperGenerationResult.sequences_ids"]], "whispergenerationresultasync (class in ctranslate2.models)": [[53, "ctranslate2.models.WhisperGenerationResultAsync"]], "done() (ctranslate2.models.whispergenerationresultasync method)": [[53, "ctranslate2.models.WhisperGenerationResultAsync.done"]], "result() (ctranslate2.models.whispergenerationresultasync method)": [[53, "ctranslate2.models.WhisperGenerationResultAsync.result"]], "set_log_level() (in module ctranslate2)": [[54, "ctranslate2.set_log_level"]], "set_random_seed() (in module ctranslate2)": [[55, "ctranslate2.set_random_seed"]], "ctranslate2.specs": [[56, "module-ctranslate2.specs"]], "activation (class in ctranslate2.specs)": [[57, "ctranslate2.specs.Activation"]], "gelu (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.GELU"]], "gelusigmoid (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.GELUSigmoid"]], "gelutanh (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.GELUTanh"]], "relu (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.RELU"]], "swish (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.SWISH"]], "sigmoid (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.Sigmoid"]], "tanh (ctranslate2.specs.activation attribute)": [[57, "ctranslate2.specs.Activation.Tanh"]], "add (ctranslate2.specs.embeddingsmerge attribute)": [[58, "ctranslate2.specs.EmbeddingsMerge.ADD"]], "concat (ctranslate2.specs.embeddingsmerge attribute)": [[58, "ctranslate2.specs.EmbeddingsMerge.CONCAT"]], "embeddingsmerge (class in ctranslate2.specs)": [[58, "ctranslate2.specs.EmbeddingsMerge"]], "languagemodelspec (class in ctranslate2.specs)": [[59, "ctranslate2.specs.LanguageModelSpec"]], "__init__() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.__init__"]], "config (ctranslate2.specs.languagemodelspec property)": [[59, "ctranslate2.specs.LanguageModelSpec.config"]], "get_default_config() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.get_default_config"]], "get_vocabulary_size() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.get_vocabulary_size"]], "name (ctranslate2.specs.languagemodelspec property)": [[59, "ctranslate2.specs.LanguageModelSpec.name"]], "optimize() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.optimize"]], "register_file() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.register_file"]], "register_vocabulary() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.register_vocabulary"]], "revision (ctranslate2.specs.languagemodelspec property)": [[59, "ctranslate2.specs.LanguageModelSpec.revision"]], "save() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.save"]], "validate() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.validate"]], "variables() (ctranslate2.specs.languagemodelspec method)": [[59, "ctranslate2.specs.LanguageModelSpec.variables"]], "layerspec (class in ctranslate2.specs)": [[60, "ctranslate2.specs.LayerSpec"]], "optimize() (ctranslate2.specs.layerspec method)": [[60, "ctranslate2.specs.LayerSpec.optimize"]], "validate() (ctranslate2.specs.layerspec method)": [[60, "ctranslate2.specs.LayerSpec.validate"]], "variables() (ctranslate2.specs.layerspec method)": [[60, "ctranslate2.specs.LayerSpec.variables"]], "modelspec (class in ctranslate2.specs)": [[61, "ctranslate2.specs.ModelSpec"]], "__init__() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.__init__"]], "config (ctranslate2.specs.modelspec property)": [[61, "ctranslate2.specs.ModelSpec.config"]], "get_default_config() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.get_default_config"]], "name (ctranslate2.specs.modelspec property)": [[61, "ctranslate2.specs.ModelSpec.name"]], "optimize() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.optimize"]], "register_file() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.register_file"]], "revision (ctranslate2.specs.modelspec property)": [[61, "ctranslate2.specs.ModelSpec.revision"]], "save() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.save"]], "validate() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.validate"]], "variables() (ctranslate2.specs.modelspec method)": [[61, "ctranslate2.specs.ModelSpec.variables"]], "linear (ctranslate2.specs.rotaryscalingtype attribute)": [[62, "ctranslate2.specs.RotaryScalingType.Linear"]], "llama3 (ctranslate2.specs.rotaryscalingtype attribute)": [[62, "ctranslate2.specs.RotaryScalingType.Llama3"]], "rotaryscalingtype (class in ctranslate2.specs)": [[62, "ctranslate2.specs.RotaryScalingType"]], "su (ctranslate2.specs.rotaryscalingtype attribute)": [[62, "ctranslate2.specs.RotaryScalingType.Su"]], "sequencetosequencemodelspec (class in ctranslate2.specs)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec"]], "__init__() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.__init__"]], "config (ctranslate2.specs.sequencetosequencemodelspec property)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.config"]], "get_default_config() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.get_default_config"]], "get_source_vocabulary_size() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.get_source_vocabulary_size"]], "get_target_vocabulary_size() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.get_target_vocabulary_size"]], "name (ctranslate2.specs.sequencetosequencemodelspec property)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.name"]], "optimize() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.optimize"]], "register_file() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.register_file"]], "register_source_vocabulary() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.register_source_vocabulary"]], "register_target_vocabulary() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.register_target_vocabulary"]], "register_vocabulary_mapping() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.register_vocabulary_mapping"]], "revision (ctranslate2.specs.sequencetosequencemodelspec property)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.revision"]], "save() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.save"]], "validate() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.validate"]], "variables() (ctranslate2.specs.sequencetosequencemodelspec method)": [[63, "ctranslate2.specs.SequenceToSequenceModelSpec.variables"]], "transformerdecodermodelspec (class in ctranslate2.specs)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec"]], "__init__() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.__init__"]], "config (ctranslate2.specs.transformerdecodermodelspec property)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.config"]], "from_config() (ctranslate2.specs.transformerdecodermodelspec class method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.from_config"]], "get_default_config() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.get_default_config"]], "get_vocabulary_size() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.get_vocabulary_size"]], "name (ctranslate2.specs.transformerdecodermodelspec property)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.name"]], "optimize() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.optimize"]], "register_file() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.register_file"]], "register_vocabulary() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.register_vocabulary"]], "revision (ctranslate2.specs.transformerdecodermodelspec property)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.revision"]], "save() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.save"]], "validate() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.validate"]], "variables() (ctranslate2.specs.transformerdecodermodelspec method)": [[64, "ctranslate2.specs.TransformerDecoderModelSpec.variables"]], "transformerdecoderspec (class in ctranslate2.specs)": [[65, "ctranslate2.specs.TransformerDecoderSpec"]], "__init__() (ctranslate2.specs.transformerdecoderspec method)": [[65, "ctranslate2.specs.TransformerDecoderSpec.__init__"]], "config (ctranslate2.specs.transformerdecoderspec property)": [[65, "ctranslate2.specs.TransformerDecoderSpec.config"]], "optimize() (ctranslate2.specs.transformerdecoderspec method)": [[65, "ctranslate2.specs.TransformerDecoderSpec.optimize"]], "validate() (ctranslate2.specs.transformerdecoderspec method)": [[65, "ctranslate2.specs.TransformerDecoderSpec.validate"]], "variables() (ctranslate2.specs.transformerdecoderspec method)": [[65, "ctranslate2.specs.TransformerDecoderSpec.variables"]], "transformerencodermodelspec (class in ctranslate2.specs)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec"]], "__init__() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.__init__"]], "config (ctranslate2.specs.transformerencodermodelspec property)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.config"]], "get_default_config() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.get_default_config"]], "get_vocabulary_size() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.get_vocabulary_size"]], "name (ctranslate2.specs.transformerencodermodelspec property)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.name"]], "optimize() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.optimize"]], "register_file() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.register_file"]], "register_vocabulary() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.register_vocabulary"]], "revision (ctranslate2.specs.transformerencodermodelspec property)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.revision"]], "save() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.save"]], "validate() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.validate"]], "variables() (ctranslate2.specs.transformerencodermodelspec method)": [[66, "ctranslate2.specs.TransformerEncoderModelSpec.variables"]], "transformerencoderspec (class in ctranslate2.specs)": [[67, "ctranslate2.specs.TransformerEncoderSpec"]], "__init__() (ctranslate2.specs.transformerencoderspec method)": [[67, "ctranslate2.specs.TransformerEncoderSpec.__init__"]], "optimize() (ctranslate2.specs.transformerencoderspec method)": [[67, "ctranslate2.specs.TransformerEncoderSpec.optimize"]], "validate() (ctranslate2.specs.transformerencoderspec method)": [[67, "ctranslate2.specs.TransformerEncoderSpec.validate"]], "variables() (ctranslate2.specs.transformerencoderspec method)": [[67, "ctranslate2.specs.TransformerEncoderSpec.variables"]], "transformerspec (class in ctranslate2.specs)": [[68, "ctranslate2.specs.TransformerSpec"]], "__init__() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.__init__"]], "config (ctranslate2.specs.transformerspec property)": [[68, "ctranslate2.specs.TransformerSpec.config"]], "from_config() (ctranslate2.specs.transformerspec class method)": [[68, "ctranslate2.specs.TransformerSpec.from_config"]], "get_default_config() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.get_default_config"]], "get_source_vocabulary_size() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.get_source_vocabulary_size"]], "get_target_vocabulary_size() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.get_target_vocabulary_size"]], "name (ctranslate2.specs.transformerspec property)": [[68, "ctranslate2.specs.TransformerSpec.name"]], "optimize() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.optimize"]], "register_file() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.register_file"]], "register_source_vocabulary() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.register_source_vocabulary"]], "register_target_vocabulary() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.register_target_vocabulary"]], "register_vocabulary_mapping() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.register_vocabulary_mapping"]], "revision (ctranslate2.specs.transformerspec property)": [[68, "ctranslate2.specs.TransformerSpec.revision"]], "save() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.save"]], "validate() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.validate"]], "variables() (ctranslate2.specs.transformerspec method)": [[68, "ctranslate2.specs.TransformerSpec.variables"]], "wav2vec2bertspec (class in ctranslate2.specs)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec"]], "__init__() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.__init__"]], "config (ctranslate2.specs.wav2vec2bertspec property)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.config"]], "get_default_config() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.get_default_config"]], "get_vocabulary_size() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.get_vocabulary_size"]], "name (ctranslate2.specs.wav2vec2bertspec property)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.name"]], "optimize() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.optimize"]], "register_file() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.register_file"]], "register_vocabulary() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.register_vocabulary"]], "revision (ctranslate2.specs.wav2vec2bertspec property)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.revision"]], "save() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.save"]], "validate() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.validate"]], "variables() (ctranslate2.specs.wav2vec2bertspec method)": [[69, "ctranslate2.specs.Wav2Vec2BertSpec.variables"]], "wav2vec2spec (class in ctranslate2.specs)": [[70, "ctranslate2.specs.Wav2Vec2Spec"]], "__init__() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.__init__"]], "config (ctranslate2.specs.wav2vec2spec property)": [[70, "ctranslate2.specs.Wav2Vec2Spec.config"]], "get_default_config() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.get_default_config"]], "get_vocabulary_size() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.get_vocabulary_size"]], "name (ctranslate2.specs.wav2vec2spec property)": [[70, "ctranslate2.specs.Wav2Vec2Spec.name"]], "optimize() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.optimize"]], "register_file() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.register_file"]], "register_vocabulary() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.register_vocabulary"]], "revision (ctranslate2.specs.wav2vec2spec property)": [[70, "ctranslate2.specs.Wav2Vec2Spec.revision"]], "save() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.save"]], "validate() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.validate"]], "variables() (ctranslate2.specs.wav2vec2spec method)": [[70, "ctranslate2.specs.Wav2Vec2Spec.variables"]], "whisperspec (class in ctranslate2.specs)": [[71, "ctranslate2.specs.WhisperSpec"]], "__init__() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.__init__"]], "config (ctranslate2.specs.whisperspec property)": [[71, "ctranslate2.specs.WhisperSpec.config"]], "get_default_config() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.get_default_config"]], "get_vocabulary_size() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.get_vocabulary_size"]], "name (ctranslate2.specs.whisperspec property)": [[71, "ctranslate2.specs.WhisperSpec.name"]], "optimize() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.optimize"]], "register_file() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.register_file"]], "register_vocabulary() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.register_vocabulary"]], "revision (ctranslate2.specs.whisperspec property)": [[71, "ctranslate2.specs.WhisperSpec.revision"]], "save() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.save"]], "validate() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.validate"]], "variables() (ctranslate2.specs.whisperspec method)": [[71, "ctranslate2.specs.WhisperSpec.variables"]]}})